{"version":3,"sources":["img/antalis-logo.png","img/antalis-logo-white.png","components/backend.js","components/loading.js","components/layout/utils/overlay_alert.jsx","components/login.js","img/antalis-brand-white.png","helpers/getData.js","components/layout/logged_as.js","components/layout/sidebars/cliente.js","components/layout/sidebars/tecnico.js","components/layout/sidebars/coordinador.js","components/layout/sidebars/analista.js","components/layout/sidebars/admin.js","components/layout/loading_content.js","components/layout.js","components/backendWithoutAuth.js","components/recover_pass/recover.js","components/recover_pass/recuperate.js","components/manage/users/utils/users_table.js","components/manage/users/index.js","components/manage/customers/utils/customers_table.js","components/manage/customers/index.js","components/layout/utils/custom_style_select.jsx","components/layout/ButtonBack.jsx","components/manage/users/register.jsx","components/manage/users/edit.jsx","components/manage/customers/utils/equipment_table.js","components/manage/customers/manageEquipment.jsx","components/manage/customers/addEquipment.jsx","components/manage/customers/editEquipment.jsx","components/ot_request/CreateRequest.jsx","components/home.jsx","components/layout/utils/overlay_alert_onload.jsx","components/ot_request/utils/ListRequestClient.jsx","components/ot_request/index.jsx","img/user-icon-secondary.svg","components/configureAccount.jsx","components/layout_error/NotFound.jsx","components/manage/technicals/utils/technicals_table.js","components/manage/technicals/index.js","components/ot_request/utils/ListRequest.jsx","components/ot_request/allRequests.jsx","components/ot/utils/LoadingCalendar.jsx","components/ot/utils/CalendarTechnical.jsx","helpers/IdActividad.js","components/ot/utils/accordionDataRequest.jsx","helpers/requiredSelect.js","components/ot/createOT.jsx","components/ot/utils/LoadingComments.jsx","components/ot/utils/Comment.jsx","components/ot/utils/CommentsOT.jsx","components/ot/ViewOT.jsx","App.js","index.js"],"names":["ValidateToken","token","Promise","resolve","invalid_token","axios","get","headers","then","res","status","catch","err","Backend","create","baseURL","timeout","transformRequest","data","cookies","Cookies","path","login","valid_token","window","location","href","JSON","stringify","Loading","className","style","overflow","Spinner","animation","role","variant","width","src","logo","OverlayAlert","message","duration","uuid","dt","Date","getTime","replace","c","r","Math","random","floor","toString","createUUID","alert_ref","useRef","useEffect","setInterval","current","classList","remove","add","position","zIndex","right","bottom","ref","icon","faCheckCircle","faInfoCircle","faExclamationCircle","faTimesCircle","LoginPage","email_ref","email_req_ref","password_ref","password_req_ref","remember_me_ref","remember_me_email","localStorage","getItem","useState","alert","setAlert","history","useHistory","id","alt","logo_white","onSubmit","e","preventDefault","email_val","value","password_val","failed","focus","remember_me","checked","setItem","post","email","password","set","_user","user","push","type","placeholder","defaultValue","defaultChecked","to","getFullYear","Login","loading","setLoading","checkSession","a","getCurrentUser","parse","getCurrentRole","LoggedAs","username","setUsername","fullname","SidebarCliente","faToolbox","faTools","SidebarTecnico","faCalendarAlt","SidebarCoordinador","faBusinessTime","faArchive","faCog","faHardHat","faUserTie","SidebarAnalista","faChartPie","SidebarAdmin","faUsers","LoadingContent","size","animationDelay","animationDuration","switchSideBar","LayoutPage","content","layout_wrapper","currentRole","brand","height","onClick","toggle","contains","faBars","Dropdown","Toggle","faUser","Menu","Item","faUserCog","removeItem","faSignOutAlt","Layout","BackendWithoutAuth","RecoverPasswordPage","active","mail_ref","event","params","Email","faKey","RecoverPassword","RecuperatePasswordPage","mail","psw_ref","confirmPsw_ref","patternPass","RegExp","alert_required","map","field","test","newPassword","confirmNewPassword","RecuperatePassword","parameters","search","split","reduce","decodeURIComponent","UsersTableContent","usersData","itemsCount","totalItems","setTotalItems","ceil","numOfPages","setNumOfPages","currentPage","setCurrentPage","columnName","dir","currentFilter","setCurrentFilter","users","setUsers","pageSize","pageIndex","OrderBy","Order","console","log","filterUsers","filterCol","target","getAttribute","filter_dir","faUserPlus","faSearch","Table","striped","hover","borderless","responsive","minWidth","cursor","col","faSortAmountUp","faSortAmountDown","index","phone","Badge","pill","bg","isEnabled","OverlayTrigger","placement","overlay","Tooltip","faEdit","faUserMinus","Pagination","First","Prev","Next","Last","UsersTable","setUsersData","_users","ManageUsersContent","minHeight","ManageUsers","customersData","customers","setCustomers","codigo","faPlus","faListAlt","CustomersTable","setCustomersData","ManageCustomersContent","ManageCustomers","customStyleSelect","control","provided","state","boxShadow","isFocused","borderColor","option","backgroundColor","isSelected","color","ButtonBack","faArrowLeft","RegisterUserForm","roles","client_info_ref","technician_info_ref","userName_ref","userEmail_ref","userPhone_ref","role_ref","techExtern_ref","techCompany_ref","techCompanyInput_ref","clientCode_ref","clientRegion_ref","clientComuna_ref","clientCity_ref","clientAddress_ref","regiones","setRegiones","comunas","setComunas","maxWidth","document","querySelectorAll","forEach","elem","trim","getValue","role_control","controlRef","length","region","clientRegion_control","comuna","clientComuna_control","fullName","ciudad","calle","externo","esExterno","empresa","rolId","name","maxLength","options","styles","onChange","label","isSearchable","noOptionsMessage","clearValue","IdRegion","RegisterUser","setRoles","_roles","normalizedName","EditUserForm","clientInfo","setClientInfo","setTechInfo","IdUser","loadRegiones","setValue","find","handleRegionChange","faUserEdit","filter","EditUser","match","setUser","EquipmentTableContent","equipmentData","IdCliente","equipment","marca","modelo","serie","contrato","vigencia","EquipmentTable","setEquipmentData","ManageEquipmentContent","faLaptopHouse","ManageEquipment","nameCustomer","setNameCustomer","AddEquipmentForm","brand_ref","model_ref","serie_ref","contract_ref","contractVig_ref","contractVigShow_ref","clienteId","htmlFor","AddEquipment","EditEquipmentForm","dataEquipment","toISOString","substr","EditEquipment","setDataEquipment","IdEquipo","CreateRequestForm","equipmentUser","description_ref","equipmentId_ref","region_ref","comuna_ref","calle_ref","faFolderPlus","equipment_control","region_control","comuna_control","descripcion","equipoId","regionId","comunaId","rows","CreateRequest","setEquipmentUser","HomeContent","currentUser","toUpperCase","frameborder","allow","allowFullScreen","title","textAlign","lineHeight","rel","faLinkedin","faTwitter","faFacebook","faInstagram","Home","OverlayAlertOnLoad","borderRadius","ListRequestClient","url","requests","setRequests","moment","locale","search_ref","onSearch","Solicitud","marginRight","marginLeft","onKeyDown","key","request","estadoId","fontSize","estado","fechaCreacion","format","OtRequestContent","faFolderOpen","OtRequest","ConfigureAccountContent","userData","setReloadData","toggleChangePass","setToggleChangePass","toggleEditAccount","setToggleEditAccount","changepass_ref","dataAccount_ref","editAccount_ref","oldPass_ref","newPass_ref","confirmPass_ref","trimFields","handleEditAccount","userIcon","fontWeight","background","currentPassword","response","errors","includes","ConfigureAccount","setUserData","reloadData","NotFoundContent","NotFound","TechnicalsTableContent","TechnicalsTable","ManageTechnicalsContent","ManageTechnicals","ListRequest","pagination","setPagination","handleChangePagination","parseInt","fullnameCliente","emailCliente","faClock","AllRequest","LoadingCalendar","border","CalendarContent","myEventsList","localizer","momentLocalizer","Accordion","eventKey","Header","faCalendar","Body","events","messages","next","previous","today","month","week","day","yesterday","tomorrow","noEventsInRange","CalendarTechnical","technicalId","setEvents","IdTecnico","ot","clienteFullname","start","fechaVisita","end","TipoActividad","AccordionDataRequest","defaultActiveKey","phoneCliente","requiredSelect","select_ref","select","select_control","CreateOTContent","technicals","dataSolicitud","technicalAsiggned","setTechnicalAssigned","actividad_ref","tecnico_ref","diaVisita_ref","horario_ref","tiempoSLA_ref","faBriefcase","isNaN","solicitudId","tecnicoId","tipoActividadId","horario","tiempo","CreateOT","setTechnicals","equipId","idCliente","vigenciaContrato","setDataSolicitud","tec","technical","IdSolicitud","idrequest","LoadingComments","Comment","datetime","text","borderTopRightRadius","borderTopLeftRadius","faUserCircle","paddingLeft","fromNow","CommentsOTContent","comments","idOT","setNewComment","NewComment","maxHeight","com","marginTop","cleanOnEnter","onEnter","texto","CommentsOT","myName","setComments","newComment","comment","ViewOTContent","ViewOT","idSolicitud","App","exact","component","ReactDOM","render","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.cdd76a76.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/antalis-logo.b6bd2baa.png\";","export default __webpack_public_path__ + \"static/media/antalis-logo-white.49c93409.png\";","import axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst ValidateToken = (token) => {\r\n    return new Promise(resolve => {\r\n        let invalid_token = false;\r\n        axios.get('http://104.131.97.145/Auth/StatusAuth', {\r\n            headers: {\r\n                'Authorization': token,\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200) {\r\n                invalid_token = true;\r\n            }\r\n        })\r\n        .catch(err => {\r\n            invalid_token = true;\r\n        }).then(() => {\r\n            if(invalid_token) {\r\n                resolve(false);\r\n            }\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    });\r\n}\r\n\r\nconst Backend = axios.create({\r\n    baseURL: 'http://104.131.97.145',\r\n    timeout: 0,\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n    },\r\n    transformRequest: (data, headers) => {\r\n        const cookies = new Cookies();\r\n        headers['Authorization'] = cookies.get('session_jwt', { path: '/' });\r\n\r\n        if(data && !data.login) {\r\n            // para todos los casos menos la request de login\r\n            ValidateToken(cookies.get('session_jwt', { path: '/'}))\r\n                .then(valid_token => {\r\n                    if(!valid_token) {\r\n                        window.location.href = '/';\r\n                    }\r\n                });\r\n        }\r\n        return JSON.stringify(data);\r\n    }\r\n});\r\n\r\n\r\nexport default Backend;\r\nexport { ValidateToken }","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport logo from '../img/antalis-logo.png';\r\n\r\nconst Loading = () => {\r\n    const style = {\r\n        overflow: 'hidden'\r\n    }\r\n\r\n    const row_img_style = {\r\n        width: '20rem'\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center justify-content-center vh-100 bg-lightgray\"\r\n            style={style}>\r\n            <div className=\"row mb-3\">\r\n                <Spinner animation=\"border\" role=\"status\" variant=\"primary\"></Spinner>\r\n            </div>\r\n            <div className=\"row\" style={row_img_style}>\r\n                <img src={logo} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import { faCheckCircle, faExclamationCircle, faInfoCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst createUUID = () => {\r\n    var dt = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = (dt + Math.random()*16)%16 | 0;\r\n        dt = Math.floor(dt/16);\r\n        return (c=='x' ? r :(r&0x3|0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nconst OverlayAlert = ({ variant, message, duration }) => {\r\n    const styles = {\r\n        position: 'fixed',\r\n        zIndex: '100000',\r\n        right: '1em',\r\n        bottom: '1em'\r\n    }\r\n\r\n    const uuid = createUUID();\r\n\r\n    const alert_ref = useRef();\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            if(alert_ref.current) {\r\n                alert_ref.current.classList.remove('alert-fade-in');\r\n                alert_ref.current.classList.add('alert-fade-out');\r\n            }\r\n        }, duration);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`alert alert-${variant} alert-fade-in`} role=\"alert\"\r\n            style={styles} ref={alert_ref} key={uuid}>\r\n            {variant == 'success' ? <FontAwesomeIcon icon={faCheckCircle} className=\"me-2\" /> : <></>}\r\n            {variant == 'info' ? <FontAwesomeIcon icon={faInfoCircle} className=\"me-2\" /> : <></>}\r\n            {variant == 'warning' ? <FontAwesomeIcon icon={faExclamationCircle} className=\"me-2\" /> : <></>}\r\n            {variant == 'danger' ? <FontAwesomeIcon icon={faTimesCircle} className=\"me-2\" /> : <></>}\r\n            <small>\r\n                {message}\r\n            </small>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OverlayAlert;","import React, { useRef, useState, useEffect } from 'react';\r\nimport logo from '../img/antalis-logo.png';\r\nimport logo_white from '../img/antalis-logo-white.png';\r\nimport Backend, { ValidateToken } from './backend';\r\nimport Cookies from 'universal-cookie';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Loading from './loading';\r\nimport OverlayAlert from './layout/utils/overlay_alert';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const cookies = new Cookies();\r\n\r\n    useEffect(() => {\r\n        const checkSession = async () => {\r\n            const valid_token = await ValidateToken(cookies.get('session_jwt', { path: '/' }));\r\n            valid_token ? history.push('/layout') : setLoading(false);\r\n        }\r\n        checkSession();\r\n    }, []);\r\n\r\n    return loading ? <Loading /> : <LoginPage />\r\n}\r\n\r\nconst LoginPage = () => {\r\n    const email_ref = useRef();\r\n    const email_req_ref = useRef();\r\n    const password_ref = useRef();\r\n    const password_req_ref = useRef();\r\n\r\n    const remember_me_ref = useRef();\r\n    const remember_me_email = localStorage.getItem('remember_me_email');\r\n\r\n    const [alert, setAlert] = useState(null);\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const email_val = email_ref.current.value;\r\n        const password_val = password_ref.current.value;\r\n        let failed = false;\r\n\r\n        if(!password_val) {\r\n            password_req_ref.current.className = password_req_ref.current.className.replace('d-none', '');\r\n            password_ref.current.focus();\r\n            failed = true;\r\n        } else {\r\n            password_req_ref.current.className += ' d-none';\r\n        }\r\n\r\n        if(!email_val) {\r\n            email_req_ref.current.className = email_req_ref.current.className.replace('d-none', '');\r\n            email_ref.current.focus();\r\n            failed = true;\r\n        } else {\r\n            email_req_ref.current.className += ' d-none';\r\n        }\r\n\r\n        if(failed) { return; }\r\n\r\n        const remember_me = remember_me_ref.current.checked;\r\n        localStorage.setItem('remember_me_email', remember_me ? email_val : '');\r\n\r\n        Backend.post('/Auth/Login', {\r\n            email: email_val,\r\n            password: password_val,\r\n            login: true\r\n        })\r\n        .then(res => {\r\n            const token = 'Bearer ' + res.data.token;\r\n            cookies.set('session_jwt', token, {\r\n                path: '/'\r\n            });\r\n            // Backend.defaults.headers.common['Authorization'] = token;\r\n\r\n            Backend.get('/Accounts/currentUser', {\r\n            })\r\n            .then(_user => {\r\n                let user = _user.data;\r\n                localStorage.setItem('current_user', JSON.stringify(user));\r\n                history.push('/home');\r\n            });\r\n\r\n            \r\n        })\r\n        .catch(err => {\r\n            // alert user\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Las credenciales son incorrectas\"\r\n                duration=\"3000\"\r\n            />);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-center vh-100\" id=\"login-background\">\r\n            <div id=\"login-container\" className=\"row no-gutters\">\r\n                <div className=\"col bg-white p-5 rounded-start d-md-flex d-none justify-content-center align-items-center\">\r\n                    <img src={logo} alt=\"Antalis logo\" width=\"280px\" />\r\n                </div>\r\n                <div className=\"col bg-secondary p-5 rounded-end\">\r\n                    <div className=\"d-block d-md-none text-center\">\r\n                        <img src={logo_white} alt=\"Antalis logo\" width=\"260px\" />\r\n                    </div>\r\n                    <form className=\"p-3\" onSubmit={handleSubmit}>\r\n                        <h4 className=\"text-white mb-4 text-center d-none d-md-block\">\r\n                            Sistema de gestión de servicio técnico\r\n                        </h4>\r\n                        <h5 className=\"text-white mb-4 text-center d-block d-md-none\">\r\n                            Sistema de gestión de servicio técnico\r\n                        </h5>\r\n\r\n                        {alert}\r\n\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"form-label text-white\">Correo electrónico</label>\r\n                            <input ref={email_ref} type=\"text\" className=\"form-control\" placeholder=\"ejemplo@antalis.cl\"\r\n                                defaultValue={remember_me_email} />\r\n                            <small ref={email_req_ref} className=\"text-primary d-none\">* Campo requerido</small>\r\n\r\n                            <div className=\"form-check mt-1\">\r\n                                <input ref={remember_me_ref} className=\"form-check-input\" type=\"checkbox\"\r\n                                    defaultChecked={remember_me_email ? true : false} />\r\n                                <label className=\"form-check-label text-white\">Recordar correo electrónico</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"form-label text-white\">Contraseña</label>\r\n                            <input ref={password_ref} type=\"password\" className=\"form-control\" placeholder=\"\" />\r\n                            <small ref={password_req_ref} className=\"text-primary d-none\">* Campo requerido</small>\r\n                        </div>\r\n\r\n                        <div className=\"d-grid\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Ingresar</button>\r\n                            <small className=\"text-white text-center\">¿Olvidó su contraseña? Recupérela <Link to=\"/recover\" className=\"link-primary\">aquí</Link></small>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"text-center\">\r\n                        <small className=\"text-muted\">&copy; {new Date().getFullYear()} &ndash; Antalis</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/antalis-brand-white.e5a6ef48.png\";","export const getCurrentUser = () => (\r\n     JSON.parse(localStorage.getItem('current_user'))\r\n)\r\n\r\nexport const getCurrentRole =  () => (\r\n    JSON.parse(localStorage.getItem('current_user')).role\r\n)\r\n\r\nexport const getCurrentFullname=  () => (\r\n    JSON.parse(localStorage.getItem('current_user')).fullname\r\n)\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getCurrentUser } from \"../../helpers/getData\";\r\n\r\n\r\nconst LoggedAs = () => {\r\n    const [username, setUsername] = useState('Usuario');\r\n\r\n    useEffect(() => {\r\n        setUsername(getCurrentUser().fullname);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"small\">Sesión iniciada como:</div>\r\n            {username}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoggedAs;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faToolbox, faTools } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SidebarCliente = () => {\r\n    return (\r\n        <>\r\n            <div className=\"sb-sidenav-menu-heading\">VISITAS TÉCNICAS</div>\r\n            <NavLink className=\"nav-link\" to=\"/otrequest\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faToolbox} /></div>\r\n                Mis solicitudes\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/otrequest/create\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faTools} /></div>\r\n                Crear solicitud de visita\r\n            </NavLink>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidebarCliente;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faToolbox, faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SidebarTecnico = () => {\r\n    return (\r\n        <>\r\n            <div className=\"sb-sidenav-menu-heading\">ÓRDENES DE TRABAJO</div>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faToolbox} /></div>\r\n                OTs asignadas\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faCalendarAlt} /></div>\r\n                Calendario de trabajo\r\n            </NavLink>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidebarTecnico;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faToolbox, faArchive, faBusinessTime, faHardHat,\r\n    faUserTie, faCog\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SidebarCoordinador = () => {\r\n    return (\r\n        <>\r\n            <div className=\"sb-sidenav-menu-heading\">ÓRDENES DE TRABAJO</div>\r\n            <NavLink className=\"nav-link\" to=\"/otrequest/pending\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faToolbox} /></div>\r\n                Solicitudes de OT\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faBusinessTime} /></div>\r\n                OTs en curso\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faArchive} /></div>\r\n                OTs archivadas\r\n            </NavLink>\r\n            <div className=\"sb-sidenav-menu-heading\">SOLICITUDES DE REPUESTOS</div>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faToolbox} /></div>\r\n                Solicitudes\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faArchive} /></div>\r\n                Solicitudes archivadas\r\n            </NavLink>\r\n\r\n            <div className=\"sb-sidenav-menu-heading\">GESTIONAR</div>\r\n            <NavLink className=\"nav-link\" to=\"/manage/spare\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faCog} /></div>\r\n                Repuestos\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/manage/technicals\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faHardHat} /></div>\r\n                Técnicos    \r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/manage/customers\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faUserTie} /></div>\r\n                Clientes\r\n            </NavLink>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidebarCoordinador;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faToolbox, faArchive, faBusinessTime, faChartPie\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SidebarAnalista = () => {\r\n    return (\r\n        <>\r\n            <div className=\"sb-sidenav-menu-heading\">ÓRDENES DE TRABAJO</div>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faToolbox} /></div>\r\n                Solicitudes de OT\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faBusinessTime} /></div>\r\n                OTs en curso\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faArchive} /></div>\r\n                OTs archivadas\r\n            </NavLink>\r\n\r\n            <div className=\"sb-sidenav-menu-heading\">SOLICITUDES DE REPUESTOS</div>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faToolbox} /></div>\r\n                Solicitudes\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faArchive} /></div>\r\n                Solicitudes archivadas\r\n            </NavLink>\r\n            <div className=\"sb-sidenav-menu-heading\">ESTADÍSTICAS</div>\r\n            <NavLink className=\"nav-link\" to=\"/stats\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faChartPie} /></div>\r\n                Dashboard\r\n            </NavLink>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidebarAnalista;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faToolbox, faArchive, faBusinessTime, faHardHat,\r\n    faUserTie, faCog, faChartPie, faUsers\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst SidebarAdmin = () => {\r\n    return (\r\n        <>\r\n            <div className=\"sb-sidenav-menu-heading\">ÓRDENES DE TRABAJO</div>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faToolbox} /></div>\r\n                Solicitudes de OT\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faBusinessTime} /></div>\r\n                OTs en curso\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n            <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faArchive} /></div>\r\n                OTs archivadas\r\n            </NavLink>\r\n            <div className=\"sb-sidenav-menu-heading\">SOLICITUDES DE REPUESTOS</div>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faToolbox} /></div>\r\n                Solicitudes\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faArchive} /></div>\r\n                Solicitudes archivadas\r\n            </NavLink>\r\n\r\n            <div className=\"sb-sidenav-menu-heading\">GESTIONAR</div>\r\n            <NavLink className=\"nav-link\" to=\"/manage/spare\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faCog} /></div>\r\n                Repuestos\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/manage/technicals\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faHardHat} /></div>\r\n                Técnicos    \r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/manage/customers\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faUserTie} /></div>\r\n                Clientes\r\n            </NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/manage/users\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faUsers} /></div>\r\n                Usuarios\r\n            </NavLink>\r\n\r\n            <div className=\"sb-sidenav-menu-heading\">ESTADÍSTICAS</div>\r\n            <NavLink className=\"nav-link\" to=\"/stats\">\r\n                <div className=\"sb-nav-link-icon\"><FontAwesomeIcon icon={faChartPie} /></div>\r\n                Dashboard\r\n            </NavLink>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidebarAdmin;","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst LoadingContent = () => {\r\n    const delay0 = {\r\n        animationDelay: '0ms',\r\n        animationDuration: '1s'\r\n    }\r\n\r\n    const delay500 = {\r\n        animationDelay: '250ms',\r\n        animationDuration: '1s'\r\n    }\r\n\r\n    const delay1000 = {\r\n        animationDelay: '500ms',\r\n        animationDuration: '1s'\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex h-100 justify-content-center align-items-center my-auto\">\r\n            <Spinner animation=\"grow\" size=\"sm\" role=\"status\" variant=\"primary\" className=\"mx-1\" style={delay0}></Spinner>\r\n            <Spinner animation=\"grow\" size=\"sm\" role=\"status\" variant=\"primary\" className=\"mx-1\" style={delay500}></Spinner>\r\n            <Spinner animation=\"grow\" size=\"sm\" role=\"status\" variant=\"primary\" className=\"mx-1\" style={delay1000}></Spinner>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingContent;","import React, { useRef, useEffect, useState } from 'react';\r\nimport '../stylesheets/sb-admin/styles.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faUser, faUserCog, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport brand from '../img/antalis-brand-white.png';\r\nimport { ValidateToken } from './backend';\r\nimport { useHistory } from 'react-router';\r\nimport Loading from './loading';\r\nimport Cookies from 'universal-cookie';\r\nimport LoggedAs from './layout/logged_as';\r\nimport SidebarCliente from './layout/sidebars/cliente';\r\nimport SidebarTecnico from './layout/sidebars/tecnico';\r\nimport SidebarCoordinador from './layout/sidebars/coordinador';\r\nimport SidebarAnalista from './layout/sidebars/analista';\r\nimport SidebarAdmin from './layout/sidebars/admin';\r\nimport LoadingContent from './layout/loading_content';\r\nimport { getCurrentRole } from '../helpers/getData';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst switchSideBar = (role) => {\r\n    switch (role) {\r\n        case \"Admin\":\r\n            return <SidebarAdmin/>;    \r\n        case \"Analista\":\r\n            return <SidebarAnalista/>;   \r\n        case \"Cliente\":\r\n            return <SidebarCliente/>;   \r\n        case \"Coordinador\":\r\n            return <SidebarCoordinador/>;   \r\n        case \"Tecnico\":\r\n            return <SidebarTecnico/>;   \r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nconst Layout = ({ content }) => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const cookies = new Cookies();\r\n\r\n    useEffect(() => {\r\n        const checkSession = async () => {\r\n            const valid_token = await ValidateToken(cookies.get('session_jwt', { path: '/' }));\r\n            valid_token ? setLoading(false) : history.push('/');\r\n        }\r\n        checkSession();\r\n    }, []);\r\n\r\n    return loading ? <Loading /> : <LayoutPage content={content} />\r\n}\r\n\r\nconst LayoutPage = ({ content }) => {\r\n    const layout_wrapper = useRef();\r\n    const cookies = new Cookies();\r\n    const history = useHistory();\r\n    const currentRole = getCurrentRole();\r\n    const sidebarToggle = e => {\r\n        e.preventDefault();\r\n        layout_wrapper.current.classList.toggle('sb-sidenav-toggled');\r\n        localStorage.setItem('sb|sidebar-toggle', layout_wrapper.current.classList.contains('sb-sidenav-toggled'));\r\n    }\r\n    \r\n\r\n    const handleLogout = () => {\r\n        cookies.remove('session_jwt', {\r\n            path: '/'\r\n        });\r\n        localStorage.removeItem(\"current_user\");\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"vh-100 sb-nav-fixed\" ref={layout_wrapper}>\r\n            <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-primary shadow-sm\">\r\n                <NavLink className=\"navbar-brand ps-3\" to=\"/home\">\r\n                    <img src={brand} id=\"navbar-brand-img\" height=\"30\" className=\"my-auto\" />\r\n                </NavLink>\r\n                <button className=\"btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0\" id=\"sidebarToggle\"\r\n                    onClick={sidebarToggle} href=\"#!\">\r\n                    <FontAwesomeIcon icon={faBars} className=\"text-white\" />\r\n                </button>\r\n\r\n                <Dropdown className=\"ms-auto me-3 me-lg-4\">\r\n                    <Dropdown.Toggle id=\"user-toggle\" className=\"border-0\">\r\n                        <FontAwesomeIcon icon={faUser} className=\"fa-fw\" />\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item href=\"/configureaccount\">\r\n                            <FontAwesomeIcon icon={faUserCog} className=\"me-1\" />\r\n                            Configuración de cuenta\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={handleLogout}>\r\n                            <FontAwesomeIcon icon={faSignOutAlt} className=\"me-1\" />\r\n                            Cerrar sesión\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </nav>\r\n            <div id=\"layoutSidenav\">\r\n                <div id=\"layoutSidenav_nav\">\r\n                    <nav className=\"sb-sidenav accordion sb-sidenav-dark bg-secondary\" id=\"sidenavAccordion\">\r\n                        <div className=\"sb-sidenav-menu\">\r\n                            <div className=\"nav\">\r\n                                {switchSideBar(currentRole)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sb-sidenav-footer\" id=\"logged-as\">\r\n                            <LoggedAs />\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div id=\"layoutSidenav_content\" className=\"bg-lightgray\">\r\n                    <main>\r\n                        {content}\r\n                    </main>\r\n                    <footer className=\"py-4 bg-light mt-auto\">\r\n                        <div className=\"container-fluid px-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between small\">\r\n                                <div className=\"text-muted\">&copy; {new Date().getFullYear()} &ndash; Antalis</div>\r\n                            </div>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","import axios from \"axios\";\r\n\r\nconst BackendWithoutAuth = axios.create({\r\n    baseURL: 'http://104.131.97.145',\r\n    timeout: 0,\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n    },\r\n    transformRequest: (data, headers) => {\r\n        return JSON.stringify(data);\r\n    }\r\n});\r\n\r\n\r\nexport default BackendWithoutAuth;","import React, { useState, useRef } from \"react\";\r\nimport logo from '../../img/antalis-logo-white.png';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faKey } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayAlert from \"../layout/utils/overlay_alert\";\r\nimport BackendWithoutAuth from \"../backendWithoutAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RecoverPassword = () => {\r\n    return <RecoverPasswordPage />\r\n}\r\n\r\nconst RecoverPasswordPage = () => {\r\n    const [alert, setAlert] = useState({active: false, message: \"\"});\r\n    const mail_ref = useRef();\r\n    \r\n    const handleSubmitForgoutPass = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(mail_ref.current.value === \"\") {\r\n            setAlert({active: true, message: \"Debe ingresar su correo electrónico.\"});\r\n            return;\r\n        }\r\n\r\n        BackendWithoutAuth.get('/Auth/ForgotPassword', {\r\n            params: {\r\n                Email: mail_ref.current.value\r\n            }\r\n        })\r\n        .then(res => {\r\n            \r\n            mail_ref.current.value = \"\";\r\n        })\r\n        .catch(err => {\r\n            setAlert({active: true, message: \"Ha ocurrido un error, intente nuevamente.\"});\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {alert.active ? <OverlayAlert variant=\"danger\" duration=\"3000\" message={alert.message}></OverlayAlert> : null}\r\n        <div className=\"d-flex align-items-center justify-content-center h-100\" id=\"login-background\">\r\n            <div className=\"bg-secondary p-5 rounded\" id=\"recover-container\">\r\n                <div className=\"text-center mb-4\">\r\n                    <img src={logo} alt=\"Antalis logo\" width=\"200px\" />\r\n                </div>\r\n\r\n                <form className=\"p-2\" onSubmit={handleSubmitForgoutPass}>\r\n                    <h5 className=\"text-white mb-4 text-center\">\r\n                        <FontAwesomeIcon icon={faKey} className=\"me-2\" />\r\n                        Recuperar contraseña\r\n                    </h5>\r\n\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"form-label text-white\">Correo electrónico</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"ejemplo@antalis.cl\" ref={mail_ref}/>\r\n                        <div className=\"form-text text-white\">\r\n                            Si su correo electrónico se encuentra asociado a una cuenta, se le hará llegar instrucciones sobre cómo reestablecer su contraseña\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-grid\">\r\n                        <button type=\"submit\" className=\"btn btn-primary mb-2\">Confirmar</button>\r\n                        <Link to=\"/\" className=\"btn btn-outline-primary\">Volver al inicio</Link>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"text-center\">\r\n                    <small className=\"text-muted\">&copy; {new Date().getFullYear()} &ndash; Antalis</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RecoverPassword;","import React, { useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport logo from '../../img/antalis-logo-white.png';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faKey } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayAlert from \"../layout/utils/overlay_alert\";\r\nimport BackendWithoutAuth from \"../backendWithoutAuth\";\r\n\r\nconst RecuperatePassword = () => {\r\n// 3) One liner - Get query string with '&' and without any library\r\n    const getQueryParams = () => window.location.search.replace('?', '').split('&').reduce((r,e) => (r[e.split('=')[0]] = decodeURIComponent(e.split('=')[1]), r), {});\r\n\r\n    const parameters = getQueryParams();\r\n    const email = parameters.email;\r\n    const token = parameters.token;\r\n\r\n    return <RecuperatePasswordPage token={token} mail = {email} />;\r\n}\r\n\r\nconst RecuperatePasswordPage = ({token, mail}) => {\r\n    const [alert, setAlert] = useState({active: false, message: \"\"});\r\n    const history = useHistory();\r\n    const mail_ref = useRef();\r\n    const psw_ref = useRef();\r\n    const confirmPsw_ref = useRef();\r\n\r\n    const handleSubmitForgoutPass = (event) => {\r\n        event.preventDefault();\r\n        setAlert({active: false, message: \"\"});\r\n        const patternPass = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*;¡ñ])(?=.{6,})\");\r\n            \r\n        let alert_required = false;\r\n        const required_fields = [mail_ref, psw_ref, confirmPsw_ref];\r\n        required_fields.map(field => {\r\n            field.current.classList.remove('required-field');\r\n            if(!field.current.value) {\r\n                alert_required = true;\r\n                field.current.classList.add('required-field');\r\n            }\r\n        });\r\n        if(alert_required) {\r\n            setAlert({active: true, message: \"Debe completar todos los campos.\"});\r\n            return;\r\n        } \r\n        if(psw_ref.current.value !== confirmPsw_ref.current.value){\r\n            setAlert({active: true, message: \"La contraseña no coincide.\"});\r\n            return;\r\n        }\r\n        if(!patternPass.test(confirmPsw_ref.current.value)){\r\n            setAlert({active: true, message: \"La contraseña debe tener un largo mínimo de 6, tener al menos una mayuscula, una minuscula, un número y un símbolo.\"});\r\n            return;\r\n        }\r\n\r\n        BackendWithoutAuth.post('/Auth/ResetPassword', {\r\n            email: mail_ref.current.value,\r\n            token: token,\r\n            newPassword: psw_ref.current.value,\r\n            confirmNewPassword: confirmPsw_ref.current.value\r\n        })\r\n        .then(res => {\r\n            mail_ref.current.value = \"\";\r\n            confirmPsw_ref.current.value = \"\";\r\n            psw_ref.current.value = \"\";\r\n\r\n            history.push(\"/\");\r\n        })\r\n        .catch(err => {\r\n            setAlert({active: true, message: \"Ha ocurrido un error, intente nuevamente.\"});\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {alert.active ? <OverlayAlert variant=\"danger\" duration=\"3000\" message={alert.message}></OverlayAlert> : null}\r\n        <div className=\"d-flex align-items-center justify-content-center h-100\" id=\"login-background\">\r\n            <div className=\"bg-secondary p-5 rounded\" id=\"recover-container\">\r\n                <div className=\"text-center mb-4\">\r\n                    <img src={logo} alt=\"Antalis logo\" width=\"200px\" />\r\n                </div>\r\n\r\n                <form className=\"p-2\" onSubmit={handleSubmitForgoutPass}>\r\n                    <h5 className=\"text-white mb-4 text-center\">\r\n                        <FontAwesomeIcon icon={faKey} className=\"me-2\" />\r\n                        Recuperar contraseña\r\n                    </h5>\r\n\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"form-label text-white\">Correo electrónico</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"ejemplo@antalis.cl\" ref={mail_ref} defaultValue={mail}/>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"form-label text-white\">Nueva contraseña</label>\r\n                        <input type=\"password\" className=\"form-control\"  ref={psw_ref}/>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"form-label text-white\">Ingrese la contraseña nuevamente</label>\r\n                        <input type=\"password\" className=\"form-control\"  ref={confirmPsw_ref}/>\r\n                    </div>\r\n\r\n                    <div className=\"d-grid\">\r\n                        <button type=\"submit\" className=\"btn btn-primary mb-2\">Confirmar</button>\r\n                    </div>\r\n                </form>\r\n                <small className=\"text-white\">La contraseña debe contener al menos:</small>\r\n                <ul className=\"text-white\">\r\n                <li><small>Un largo mínimo de 6 carácteres</small></li>\r\n                            <li><small>Una letra mayúscula</small></li>\r\n                            <li><small>Una letra minúscula</small></li>\r\n                            <li><small>Un carácter especial</small></li>\r\n                            <li><small>Un número</small></li>\r\n                </ul>\r\n                <div className=\"text-center\">\r\n                    <small className=\"text-muted\">&copy; {new Date().getFullYear()} &ndash; Antalis</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RecuperatePassword;","import { faEdit, faSearch, faSortAmountUp, faSortAmountDown, faUserMinus, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table, Badge, Pagination, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backend from \"../../../backend\";\r\nimport LoadingContent from \"../../../layout/loading_content\";\r\n\r\nconst UsersTable = () => {\r\n    const [usersData, setUsersData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getUsers', {})\r\n        .then(_users => {\r\n            setUsersData(_users.data);\r\n        })\r\n        .catch(err => {\r\n            // console.log('ERROR');\r\n            setUsersData({\r\n                itemsCount: 0,\r\n                pageIndex: 1\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return !usersData ? <LoadingContent /> : <UsersTableContent usersData={usersData} />\r\n}\r\n\r\nconst UsersTableContent = ({ usersData }) => {\r\n    const itemsPerPage = 5;\r\n    const [totalItems, setTotalItems] = useState(usersData.itemsCount);\r\n    const [numOfPages, setNumOfPages] = useState(Math.ceil(totalItems / itemsPerPage));\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentFilter, setCurrentFilter] = useState({\r\n        columnName: 'fullname',\r\n        dir: 'asc'\r\n    });\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getUsers', {\r\n            params: {\r\n                pageSize: itemsPerPage,\r\n                pageIndex: currentPage,\r\n                OrderBy: currentFilter.columnName,\r\n                Order: currentFilter.dir\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(res.data);\r\n            setTotalItems(res.data.itemsCount);\r\n            setNumOfPages(Math.ceil(res.data.itemsCount / itemsPerPage));\r\n            setUsers(res.data.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, [currentPage, currentFilter]);\r\n\r\n    const nextPage = () => {\r\n        if(currentPage < numOfPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    }\r\n\r\n    const previousPage = () => {\r\n        if(currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    }\r\n\r\n    const firstPage = () => {\r\n        if(currentPage != 1) {\r\n            setCurrentPage(1);\r\n        }\r\n    }\r\n\r\n    const lastPage = () => {\r\n        if(currentPage != numOfPages) {\r\n            setCurrentPage(numOfPages);\r\n        }\r\n    }\r\n\r\n    const filterUsers = (event) => {\r\n        const filterCol = event.target.getAttribute('col');\r\n        let filter_dir = 'asc';\r\n        if(currentFilter.columnName == filterCol && currentFilter.dir == 'asc') {\r\n            filter_dir = 'des';\r\n        }\r\n        setCurrentFilter({\r\n            columnName: filterCol,\r\n            dir: filter_dir\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n                <Link to=\"/manage/users/new\" className=\"btn btn-primary\">\r\n                    <FontAwesomeIcon icon={faUserPlus} />\r\n                    <span className=\"d-none d-md-inline ms-2\">Nuevo</span>\r\n                </Link>\r\n\r\n                <div style={{width: '12rem'}}>\r\n                    <div className=\"input-group\">\r\n                        <span className=\"input-group-text\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                        </span>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Table striped hover borderless responsive className=\"mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'fullname'}>\r\n                            Nombre\r\n                            {currentFilter.columnName == 'fullname' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'role'}>\r\n                            Rol\r\n                            {currentFilter.columnName == 'role' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th style={{minWidth: '12rem', cursor: 'pointer'}} onClick={filterUsers} col={'email'}>\r\n                            Correo electrónico\r\n                            {currentFilter.columnName == 'email' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'phone'}>\r\n                            Teléfono\r\n                            {currentFilter.columnName == 'phone' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'isEnabled'}>\r\n                            Estado\r\n                            {currentFilter.columnName == 'isEnabled' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem'}}>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{user.fullname}</td>\r\n                                <td>{user.role}</td>\r\n                                <td>{user.email}</td>\r\n                                <td className=\"text-center\">{user.phone || <>&ndash;</>}</td>\r\n                                <td className=\"text-center\">\r\n                                    <Badge pill bg={user.isEnabled ? 'success' : 'danger'}>\r\n                                        {user.isEnabled ? 'Activo' : 'Inactivo'}\r\n                                    </Badge>\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <OverlayTrigger placement=\"left\"\r\n                                        overlay={<Tooltip>Editar usuario</Tooltip>}>\r\n                                        <Link className=\"btn btn-outline-secondary text-center me-2\"\r\n                                              to={'/manage/users/edit/' + user.id}>\r\n                                                <FontAwesomeIcon icon={faEdit} />\r\n                                        </Link>\r\n                                    </OverlayTrigger>\r\n\r\n                                    <OverlayTrigger placement=\"left\"\r\n                                        overlay={<Tooltip>Desactivar cuenta</Tooltip>}>\r\n                                        <Link className=\"btn btn-outline-secondary text-center\"\r\n                                              to=\"\">\r\n                                                <FontAwesomeIcon icon={faUserMinus} />\r\n                                        </Link>\r\n                                    </OverlayTrigger>\r\n\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n                <caption className=\"pb-0\">\r\n                    <div className=\"d-flex justify-content-between mt-3\">\r\n                        <div>\r\n                            Mostrando elementos {currentPage * itemsPerPage - itemsPerPage + 1} &ndash; {currentPage * itemsPerPage < totalItems ? currentPage * itemsPerPage : totalItems} de {totalItems}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Pagination size=\"sm\">\r\n                                <Pagination.First onClick={firstPage} />\r\n                                <Pagination.Prev  onClick={previousPage} />\r\n\r\n                                {/* {currentPage > 1 ? <Pagination.Ellipsis /> : <></>} */}\r\n\r\n                                <Pagination.Item active>{currentPage}</Pagination.Item>\r\n\r\n                                {/* {numOfPages - currentPage >= 1 ? <Pagination.Ellipsis /> : <></>} */}\r\n\r\n                                <Pagination.Next onClick={nextPage} />\r\n                                <Pagination.Last onClick={lastPage} />\r\n                            </Pagination>\r\n                        </div>\r\n                    </div>\r\n                </caption>\r\n            </Table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersTable;","import { faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport UsersTable from \"./utils/users_table\";\r\n\r\nconst ManageUsers = () => {\r\n    return <Layout content={<ManageUsersContent />} />;\r\n}\r\n\r\nconst ManageUsersContent = () => {\r\n    return (\r\n        <div className=\"card p-3 bg-white\" style={{minHeight: '20rem', minWidth: '20rem'}}>\r\n            <div className=\"px-2\">\r\n                <h4 className=\"mb-0\">\r\n                    <FontAwesomeIcon icon={faUsers} className=\"me-2\" />\r\n                    Gestionar usuarios\r\n                </h4>\r\n            </div>\r\n\r\n            <hr className=\"my-3\" />\r\n\r\n            <UsersTable />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageUsers;","import { faEdit, faSearch, faSortAmountUp, faSortAmountDown, faUserMinus, faUserPlus, faPlus, faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table, Badge, Pagination, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backend from \"../../../backend\";\r\nimport LoadingContent from \"../../../layout/loading_content\";\r\n\r\nconst CustomersTable = () => {\r\n    const [customersData, setCustomersData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getClientes', {})\r\n        .then(_users => {\r\n            console.log(_users.data);\r\n            setCustomersData(_users.data);\r\n        })\r\n        .catch(err => {\r\n            // console.log('ERROR');\r\n            setCustomersData({\r\n                itemsCount: 0,\r\n                pageIndex: 1\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return !customersData ? <LoadingContent /> : <UsersTableContent customersData={customersData} />\r\n}\r\n\r\nconst UsersTableContent = ({ customersData }) => {\r\n    const itemsPerPage = 5;\r\n    const [totalItems, setTotalItems] = useState(customersData.itemsCount);\r\n    const [numOfPages, setNumOfPages] = useState(Math.ceil(totalItems / itemsPerPage));\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentFilter, setCurrentFilter] = useState({\r\n        columnName: 'fullname',\r\n        dir: 'asc'\r\n    });\r\n    const [customers, setCustomers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getClientes', {\r\n            params: {\r\n                pageSize: itemsPerPage,\r\n                pageIndex: currentPage,\r\n                OrderBy: currentFilter.columnName,\r\n                Order: currentFilter.dir\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(res.data);\r\n            setTotalItems(res.data.itemsCount);\r\n            setNumOfPages(Math.ceil(res.data.itemsCount / itemsPerPage));\r\n            setCustomers(res.data.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, [currentPage, currentFilter]);\r\n\r\n    const nextPage = () => {\r\n        if(currentPage < numOfPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    }\r\n\r\n    const previousPage = () => {\r\n        if(currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    }\r\n\r\n    const firstPage = () => {\r\n        if(currentPage != 1) {\r\n            setCurrentPage(1);\r\n        }\r\n    }\r\n\r\n    const lastPage = () => {\r\n        if(currentPage != numOfPages) {\r\n            setCurrentPage(numOfPages);\r\n        }\r\n    }\r\n\r\n    const filterUsers = (event) => {\r\n        const filterCol = event.target.getAttribute('col');\r\n        let filter_dir = 'asc';\r\n        if(currentFilter.columnName == filterCol && currentFilter.dir == 'asc') {\r\n            filter_dir = 'des';\r\n        }\r\n        setCurrentFilter({\r\n            columnName: filterCol,\r\n            dir: filter_dir\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n                <Link to=\"/manage/users/new\" className=\"btn btn-primary\"><FontAwesomeIcon icon={faUserPlus} />\r\n                    <span className=\"d-none d-md-inline ms-2\">Nuevo</span></Link>\r\n\r\n                <div style={{width: '12rem'}}>\r\n                    <div className=\"input-group\">\r\n                        <span className=\"input-group-text\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                        </span>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Table striped hover borderless responsive className=\"mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'fullname'}>\r\n                            Nombre\r\n                            {currentFilter.columnName == 'fullname' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'codigo'}>\r\n                            Código\r\n                            {currentFilter.columnName == 'codigo' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th style={{minWidth: '12rem', cursor: 'pointer'}} onClick={filterUsers} col={'email'}>\r\n                            Correo electrónico\r\n                            {currentFilter.columnName == 'email' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'phone'}>\r\n                            Teléfono\r\n                            {currentFilter.columnName == 'phone' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'isEnabled'}>\r\n                            Estado\r\n                            {currentFilter.columnName == 'isEnabled' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem'}}>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {customers.map((user, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{user.fullname}</td>\r\n                                <td>{user.codigo}</td>\r\n                                <td>{user.email}</td>\r\n                                <td className=\"text-center\">{user.phone || <>&ndash;</>}</td>\r\n                                <td className=\"text-center\">\r\n                                    <Badge pill bg={user.isEnabled ? 'success' : 'danger'}>\r\n                                        {user.isEnabled ? 'Activo' : 'Inactivo'}\r\n                                    </Badge>\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <OverlayTrigger placement=\"left\"\r\n                                        overlay={<Tooltip>Agregar Equipo</Tooltip>}>\r\n                                        <Link className=\"btn btn-outline-secondary text-center me-2\" to={'/manage/equipment/add/' + user.id}><FontAwesomeIcon icon={faPlus} /></Link>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"left\"\r\n                                        overlay={<Tooltip>Ver Equipos</Tooltip>}>\r\n                                        <Link className=\"btn btn-outline-secondary text-center me-2\" to={'/manage/equipment/' + user.id}><FontAwesomeIcon icon={faListAlt} /></Link>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"left\"\r\n                                        overlay={<Tooltip>Editar usuario</Tooltip>}>\r\n                                        <Link className=\"btn btn-outline-secondary text-center me-2\" to={'/manage/users/edit/' + user.id}><FontAwesomeIcon icon={faEdit} /></Link>\r\n                                    </OverlayTrigger>\r\n\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n                <caption className=\"pb-0\">\r\n                    <div className=\"d-flex justify-content-between mt-3\">\r\n                        <div>\r\n                            Mostrando elementos {currentPage * itemsPerPage - itemsPerPage + 1} &ndash; {currentPage * itemsPerPage < totalItems ? currentPage * itemsPerPage : totalItems} de {totalItems}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Pagination size=\"sm\">\r\n                                <Pagination.First onClick={firstPage} />\r\n                                <Pagination.Prev  onClick={previousPage} />\r\n\r\n                                {/* {currentPage > 1 ? <Pagination.Ellipsis /> : <></>} */}\r\n\r\n                                <Pagination.Item active>{currentPage}</Pagination.Item>\r\n\r\n                                {/* {numOfPages - currentPage >= 1 ? <Pagination.Ellipsis /> : <></>} */}\r\n\r\n                                <Pagination.Next onClick={nextPage} />\r\n                                <Pagination.Last onClick={lastPage} />\r\n                            </Pagination>\r\n                        </div>\r\n                    </div>\r\n                </caption>\r\n            </Table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomersTable;","import { faUserTie } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport CustomersTable from \"./utils/customers_table\";\r\n\r\nconst ManageCustomers = () => {\r\n    return <Layout content={<ManageCustomersContent />} />;\r\n}\r\n\r\nconst ManageCustomersContent = () => {\r\n    return (\r\n        <div className=\"card p-3 bg-white\" style={{minHeight: '20rem', minWidth: '20rem'}}>\r\n            <div className=\"px-2\">\r\n                <h4 className=\"mb-0\">\r\n                    <FontAwesomeIcon icon={faUserTie} className=\"me-2\" />\r\n                    Gestionar clientes\r\n                </h4>\r\n            </div>\r\n\r\n            <hr className=\"my-3\" />\r\n\r\n            <CustomersTable />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageCustomers;","const customStyleSelect = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        boxShadow: state.isFocused ? '0 0 0 0.2rem rgba(245, 12, 125, 0.25) !important' : provided.boxShadow,\r\n        borderColor: state.isFocused ? '#F50C7D !important' : provided.borderColor\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        backgroundColor: state.isSelected ? '#F50C7D !important' : provided.backgroundColor,\r\n        ':hover': {\r\n            ...provided,\r\n            backgroundColor: !state.isSelected ? 'rgba(245, 12, 125, 0.25) !important' : provided.backgroundColor,\r\n            color: !state.isSelected ? 'black' : provided.color\r\n        },\r\n        ':not(:hover)': {\r\n            ...provided,\r\n            backgroundColor: 'white'\r\n        }\r\n    })\r\n}\r\n\r\nexport default customStyleSelect;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ButtonBack = ({to}) => {\r\n    const delay0 = {\r\n        animationDelay: '0ms',\r\n        animationDuration: '1s'\r\n    }\r\n\r\n    const delay500 = {\r\n        animationDelay: '250ms',\r\n        animationDuration: '1s'\r\n    }\r\n\r\n    const delay1000 = {\r\n        animationDelay: '500ms',\r\n        animationDuration: '1s'\r\n    }\r\n\r\n    return (\r\n        <Link to={to} className=\"btn btn-primary mb-2\">\r\n            <FontAwesomeIcon icon={faArrowLeft} className=\"me-2\" />\r\n            Volver atrás\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default ButtonBack;","import { faArrowLeft, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport LoadingContent from \"../../layout/loading_content\";\r\nimport Backend from \"../../backend\";\r\nimport Select from \"react-select\";\r\nimport customStyleSelect from \"../../layout/utils/custom_style_select\";\r\nimport OverlayAlert from \"../../layout/utils/overlay_alert\";\r\nimport ButtonBack from \"../../layout/ButtonBack\";\r\n\r\nconst RegisterUser = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [roles, setRoles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getRoles', {})\r\n        .then(_roles => {\r\n            setRoles(_roles.data.map(role => {\r\n                return {\r\n                    value: role.id,\r\n                    label: role.name,\r\n                    role: role.normalizedName\r\n                }\r\n            }));\r\n            setLoading(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return loading ? <LoadingContent /> : <Layout content={<RegisterUserForm roles={roles} />} />;\r\n}\r\n\r\nconst RegisterUserForm = ({ roles }) => {\r\n    const client_info_ref = useRef();\r\n    const technician_info_ref = useRef();\r\n\r\n    const userName_ref = useRef();\r\n    const userEmail_ref = useRef();\r\n    const userPhone_ref = useRef();\r\n    const role_ref = useRef();\r\n\r\n    const techExtern_ref = useRef();\r\n    const techCompany_ref = useRef();\r\n    const techCompanyInput_ref = useRef();\r\n\r\n    const clientCode_ref = useRef();\r\n    const clientRegion_ref = useRef();\r\n    const clientComuna_ref = useRef();\r\n    const clientCity_ref = useRef();\r\n    const clientAddress_ref = useRef();\r\n\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    const [regiones, setRegiones] = useState([]);\r\n    const [comunas, setComunas] = useState([]);\r\n\r\n    const loadRegiones = () => {\r\n        Backend.get('/Ubicacion/Regiones', {})\r\n        .then(res => {\r\n            setRegiones(res.data.map(region => {\r\n                return {\r\n                    value: region.id,\r\n                    label: region.name\r\n                }\r\n            }));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const handleRoleChange = (event) => {\r\n        switch(event.role) {\r\n            case 'CLIENTE':\r\n                client_info_ref.current.classList.remove('d-none');\r\n                technician_info_ref.current.classList.add('d-none');\r\n                loadRegiones();\r\n                break;\r\n            case 'TECNICO':\r\n                client_info_ref.current.classList.add('d-none');\r\n                technician_info_ref.current.classList.remove('d-none');\r\n                break;\r\n            default:\r\n                client_info_ref.current.classList.add('d-none');\r\n                technician_info_ref.current.classList.add('d-none');\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleEsExterno = (event) => {\r\n        if(event.target.checked) {\r\n            techCompany_ref.current.classList.remove('d-none');\r\n        } else {\r\n            techCompany_ref.current.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    const handleRegionChange = (event) => {\r\n        clientComuna_ref.current.clearValue();\r\n        Backend.get('/Ubicacion/Comunas', {\r\n            params: {\r\n                IdRegion: event.value\r\n            }\r\n        })\r\n        .then(res => {\r\n            setComunas(res.data.map(comuna => {\r\n                return {\r\n                    value: comuna.id,\r\n                    label: comuna.name\r\n                }\r\n            }));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const trimFields = () => {\r\n        document.querySelectorAll('.field').forEach(elem => {\r\n            elem.value = elem.value.trim();\r\n        });\r\n    }\r\n\r\n    const submitUser = (event) => {\r\n        event.preventDefault();\r\n        trimFields();\r\n\r\n        let alert_required = false;\r\n\r\n        const required_fields = [userName_ref, userEmail_ref];\r\n        required_fields.map(field => {\r\n            field.current.classList.remove('required-field');\r\n            if(!field.current.value) {\r\n                alert_required = true;\r\n                field.current.classList.add('required-field');\r\n            }\r\n        });\r\n\r\n\r\n        let role = role_ref.current.getValue();\r\n        const role_control = role_ref.current.controlRef;\r\n        if(role_control) { role_control.classList.remove('required-field'); }\r\n        if(!role.length) {\r\n            alert_required = true;\r\n            if(role_control) { role_control.classList.add('required-field'); }\r\n        } else {\r\n            role = role[0].role;\r\n        }\r\n\r\n        if(role == 'CLIENTE') {\r\n            const client_required_fields = [clientCode_ref, clientCity_ref, clientAddress_ref];\r\n            client_required_fields.map(field => {\r\n                field.current.classList.remove('required-field');\r\n                if(!field.current.value) {\r\n                    alert_required = true;\r\n                    field.current.classList.add('required-field');\r\n                }\r\n            });\r\n\r\n            let region = clientRegion_ref.current.getValue();\r\n            const clientRegion_control = clientRegion_ref.current.controlRef;\r\n            if(clientRegion_control) { clientRegion_control.classList.remove('required-field'); }\r\n            if(!region.length) {\r\n                alert_required = true;\r\n                if(clientRegion_control) { clientRegion_control.classList.add('required-field'); }\r\n            }\r\n\r\n            let comuna = clientComuna_ref.current.getValue();\r\n            const clientComuna_control = clientComuna_ref.current.controlRef;\r\n            if(clientComuna_control) { clientComuna_control.classList.remove('required-field'); }\r\n            if(!comuna.length) {\r\n                alert_required = true;\r\n                if(clientComuna_control) { clientComuna_control.classList.add('required-field'); }\r\n            }\r\n\r\n        } else if(role == 'TECNICO') {\r\n            techCompanyInput_ref.current.classList.remove('required-field');\r\n            if(techExtern_ref.current.checked && !techCompanyInput_ref.current.value) {\r\n                alert_required = true;\r\n                techCompanyInput_ref.current.classList.add('required-field');\r\n            }\r\n        }\r\n\r\n        if(alert_required) {\r\n            setAlert(\r\n                <OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Debes llenar los campos requeridos\"\r\n                    duration=\"3000\"\r\n                />\r\n            );\r\n            return;\r\n        }\r\n\r\n        if(role == 'CLIENTE') {\r\n            console.log(clientRegion_ref.current);\r\n            Backend.post('/Accounts/RegisterCliente', {\r\n                email: userEmail_ref.current.value,\r\n                fullName: userName_ref.current.value,\r\n                phone: userPhone_ref.current.value,\r\n                codigo: clientCode_ref.current.value,\r\n                region: clientRegion_ref.current.getValue()[0].value,\r\n                comuna: clientComuna_ref.current.getValue()[0].value,\r\n                ciudad: clientCity_ref.current.value,\r\n                calle: clientAddress_ref.current.value\r\n            })\r\n            .then(res => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"success\"\r\n                    message=\"El usuario ha sido registrado exitosamente\"\r\n                    duration=\"3000\"\r\n                />);\r\n            })\r\n            .catch(err => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Ocurrió un error al intentar registrar al usuario. Por favor intente nuevamente más tarde\"\r\n                    duration=\"3000\"\r\n                />);\r\n            });\r\n        } else if(role == 'TECNICO') {\r\n            let externo = techExtern_ref.current.checked;\r\n            Backend.post('/Accounts/RegisterTecnico', {\r\n                email: userEmail_ref.current.value,\r\n                fullName: userName_ref.current.value,\r\n                username: userEmail_ref.current.value,\r\n                phone: userPhone_ref.current.value,\r\n                password: 'Antalis;123',\r\n                esExterno: externo,\r\n                empresa: externo ? techCompanyInput_ref.current.value : ''\r\n            })\r\n            .then(res => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"success\"\r\n                    message=\"El usuario ha sido registrado exitosamente\"\r\n                    duration=\"3000\"\r\n                />);\r\n            })\r\n            .catch(err => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Ocurrió un error al intentar registrar al usuario. Por favor intente nuevamente más tarde\"\r\n                    duration=\"3000\"\r\n                />);\r\n            });\r\n        } else {\r\n            Backend.post('/Accounts/RegisterUser', {\r\n                email: userEmail_ref.current.value,\r\n                fullName: userName_ref.current.value,\r\n                username: userEmail_ref.current.value,\r\n                phone: userPhone_ref.current.value,\r\n                password: 'Antalis;123',\r\n                rolId: role_ref.current.getValue()[0].value\r\n            })\r\n            .then(res => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"success\"\r\n                    message=\"El usuario ha sido registrado exitosamente\"\r\n                    duration=\"3000\"\r\n                />);\r\n            })\r\n            .catch(err => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Ocurrió un error al intentar registrar al usuario. Por favor intente nuevamente más tarde\"\r\n                    duration=\"3000\"\r\n                />);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {alert}\r\n            <div className=\"my-2\">\r\n                <ButtonBack to=\"/manage/users\"/>\r\n            </div>\r\n            <div className=\"card p-4 bg-white mx-auto\" style={{maxWidth: '24rem'}}>\r\n                <div className=\"px-2\">\r\n                    <h4 className=\"mb-0\">\r\n                        <FontAwesomeIcon icon={faUserPlus} className=\"me-2\" />\r\n                        Registrar usuario\r\n                    </h4>\r\n                </div>\r\n\r\n                <hr className=\"my-3\" />\r\n\r\n                <form onSubmit={submitUser}>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Nombre</label>\r\n                        <input type=\"text\" name=\"userName\" maxLength=\"50\" className=\"form-control field\" ref={userName_ref} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Correo electrónico</label>\r\n                        <input type=\"email\" name=\"userEmail\" className=\"form-control field\" ref={userEmail_ref} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Teléfono</label>\r\n                        <input type=\"text\" name=\"userPhone\" maxLength=\"30\" className=\"form-control field\" ref={userPhone_ref} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Rol</label>\r\n                        <Select options={roles} styles={customStyleSelect} onChange={handleRoleChange} ref={role_ref}\r\n                            placeholder={'Seleccione un rol'} isSearchable={false} noOptionsMessage={() => 'Sin resultados'}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"d-none mb-3\" ref={client_info_ref}>\r\n                        <p className=\"lead\">Información cliente</p>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Código de cliente</label>\r\n                            <input type=\"text\" className=\"form-control field\" ref={clientCode_ref} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Región</label>\r\n                            <Select options={regiones} styles={customStyleSelect} onChange={handleRegionChange} ref={clientRegion_ref}\r\n                                placeholder={'Seleccione una región'} isSearchable={true} noOptionsMessage={() => 'Sin resultados'}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Comuna</label>\r\n                            <Select options={comunas} styles={customStyleSelect} noOptionsMessage={() => 'Sin resultados'}\r\n                                placeholder={'Seleccione una comuna'} isSearchable={true} ref={clientComuna_ref} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Ciudad</label>\r\n                            <input type=\"text\" className=\"form-control field\" ref={clientCity_ref} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Dirección</label>\r\n                            <input type=\"text\" className=\"form-control field\" ref={clientAddress_ref} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-none mb-3\" ref={technician_info_ref}>\r\n                        <p className=\"lead mb-2\">Información técnico</p>\r\n\r\n                        <div className=\"form-check mb-3\">\r\n                            <input type=\"checkbox\" className=\"form-check-input\" onChange={handleEsExterno} ref={techExtern_ref} />\r\n                            <label className=\"form-check-label\">Es externo</label>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3 d-none\" ref={techCompany_ref}>\r\n                            <label className=\"form-label\">Empresa</label>\r\n                            <input type=\"text\" className=\"form-control field\" ref={techCompanyInput_ref} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-grid\">\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Confirmar\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterUser;","import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport Backend from \"../../backend\";\r\nimport Loading from \"../../loading\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faUserEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport customStyleSelect from \"../../layout/utils/custom_style_select\";\r\nimport Select from \"react-select\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonBack from \"../../layout/ButtonBack\";\r\n\r\nconst EditUser = ({ match }) => {\r\n    // const [loading, setLoading] = useState(true);\r\n    const [user, setUser] = useState(null);\r\n    const [roles, setRoles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getUser', {\r\n            params: {\r\n                IdUser: match.params.id\r\n            }\r\n        })\r\n        .then(res => {\r\n            // setUser(res.data);\r\n\r\n            Backend.get('/Accounts/getRoles', {})\r\n            .then(_roles => {\r\n                setRoles(_roles.data.map(role => {\r\n                    return {\r\n                        value: role.id,\r\n                        label: role.name,\r\n                        role: role.normalizedName\r\n                    }\r\n                }));\r\n                setUser(res.data);\r\n                // setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // setLoading(false);\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            // setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return !user ? <Loading /> : <Layout content={<EditUserForm user={user} roles={roles} />} />;\r\n}\r\n\r\nconst EditUserForm = ({ user, roles }) => {\r\n    const client_info_ref = useRef();\r\n    const technician_info_ref = useRef();\r\n\r\n    const userName_ref = useRef();\r\n    const userEmail_ref = useRef();\r\n    const role_ref = useRef();\r\n\r\n    const [isEnabled, setIsEnabled] = useState(user.isEnabled);\r\n    const [clientInfo, setClientInfo] = useState(null);\r\n    const [techInfo, setTechInfo] = useState(null);\r\n\r\n    const techExtern_ref = useRef();\r\n    const techCompany_ref = useRef();\r\n    const techCompanyInput_ref = useRef();\r\n\r\n    const clientCode_ref = useRef();\r\n    const clientRegion_ref = useRef();\r\n    const clientComuna_ref = useRef();\r\n    const clientCity_ref = useRef();\r\n    const clientAddress_ref = useRef();\r\n\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    const [regiones, setRegiones] = useState([]);\r\n    const [comunas, setComunas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(user.role == 'CLIENTE') {\r\n            Backend.get('/Accounts/GetCliente', {\r\n                params: {\r\n                    IdUser: user.id\r\n                }\r\n            })\r\n            .then(res => {\r\n                // console.log(res);\r\n                // const setRegionComuna = async () => {\r\n                //     console.log('regiones 1', regiones);\r\n                //     await loadRegiones();\r\n                //     console.log('regiones 2', regiones);\r\n                //     clientRegion_ref.current.setValue(regiones.find(region => region.value == res.data.region));\r\n                //     await handleRegionChange({value: res.data.region});\r\n                //     clientComuna_ref.current.setValue(comunas.find(comuna => comuna.value == res.data.comuna));\r\n                // }\r\n                // setRegionComuna();\r\n                console.log('GetCliente');\r\n                setClientInfo(res.data);\r\n                loadRegiones();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        } else if(user.role == 'TECNICO') {\r\n            Backend.get('/Accounts/GetTecnico', {\r\n                params: {\r\n                    IdUser: user.id\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(res);\r\n                setTechInfo(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(!clientInfo) return;\r\n        clientRegion_ref.current.setValue(regiones.find(region => region.value == clientInfo.region));\r\n        handleRegionChange({value: clientInfo.region});\r\n    }, [regiones]);\r\n\r\n    useEffect(() => {\r\n        if(!clientInfo) return;\r\n        clientComuna_ref.current.setValue(comunas.find(comuna => comuna.value == clientInfo.comuna));\r\n    }, [comunas]);\r\n\r\n    const loadRegiones = () => {\r\n        Backend.get('/Ubicacion/Regiones', {})\r\n        .then(res => {\r\n            setRegiones(res.data.map(region => {\r\n                return {\r\n                    value: region.id,\r\n                    label: region.name\r\n                }\r\n            }));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const handleRegionChange = (event) => {\r\n        console.log(event);\r\n        clientComuna_ref.current.clearValue();\r\n        Backend.get('/Ubicacion/Comunas', {\r\n            params: {\r\n                IdRegion: event.value\r\n            }\r\n        })\r\n        .then(res => {\r\n            setComunas(res.data.map(comuna => {\r\n                return {\r\n                    value: comuna.id,\r\n                    label: comuna.name\r\n                }\r\n            }));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const handleRoleChange = (event) => {\r\n        switch(event.role) {\r\n            case 'CLIENTE':\r\n                client_info_ref.current.classList.remove('d-none');\r\n                technician_info_ref.current.classList.add('d-none');\r\n                loadRegiones();\r\n                break;\r\n            case 'TECNICO':\r\n                client_info_ref.current.classList.add('d-none');\r\n                technician_info_ref.current.classList.remove('d-none');\r\n                break;\r\n            default:\r\n                client_info_ref.current.classList.add('d-none');\r\n                technician_info_ref.current.classList.add('d-none');\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleEsExterno = (event) => {\r\n        if(event.target.checked) {\r\n            techCompany_ref.current.classList.remove('d-none');\r\n        } else {\r\n            techCompany_ref.current.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"my-2\">\r\n                <ButtonBack to=\"/manage/users\"/>\r\n            </div>\r\n            <div className=\"card p-4 bg-white mx-auto\" style={{maxWidth: '24rem'}}>\r\n                <div className=\"px-2\">\r\n                    <h4 className=\"mb-0\">\r\n                        <FontAwesomeIcon icon={faUserEdit} className=\"me-2\" />\r\n                        Editar usuario\r\n                    </h4>\r\n                </div>\r\n\r\n                <hr className=\"my-3\" />\r\n\r\n                <form>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Nombre</label>\r\n                        <input type=\"text\" name=\"userName\" maxLength=\"50\" className=\"form-control field\"\r\n                            ref={userName_ref} defaultValue={user.fullname} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Correo electrónico</label>\r\n                        <input type=\"email\" name=\"userEmail\" className=\"form-control field\"\r\n                            ref={userEmail_ref} defaultValue={user.email} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Teléfono</label>\r\n                        <input type=\"text\" name=\"userPhone\" maxLength=\"30\" className=\"form-control field\"\r\n                            defaultValue={user.phone} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Rol</label>\r\n                        <Select options={roles} styles={customStyleSelect} onChange={handleRoleChange} ref={role_ref}\r\n                            placeholder={'Seleccione un rol'} isSearchable={false} noOptionsMessage={() => 'Sin resultados'}\r\n                            defaultValue={roles.filter(role => role.role == user.role)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <span className=\"me-2\">Estado</span>\r\n                        <Badge pill bg={isEnabled ? 'success' : 'danger'}>\r\n                            {isEnabled ? 'Activo' : 'Inactivo'}\r\n                        </Badge>\r\n                    </div>\r\n\r\n                    <div ref={client_info_ref}\r\n                        className={'mb-3 ' + (user.role == 'CLIENTE' ? '' : 'd-none')}>\r\n                        <p className=\"lead\">Información cliente</p>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Código de cliente</label>\r\n                            <input type=\"text\" className=\"form-control field\"\r\n                                ref={clientCode_ref} defaultValue={clientInfo ? clientInfo.codigo : ''}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Región</label>\r\n                            <Select options={regiones} styles={customStyleSelect} onChange={handleRegionChange} ref={clientRegion_ref}\r\n                                placeholder={'Seleccione una región'} isSearchable={true} noOptionsMessage={() => 'Sin resultados'}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Comuna</label>\r\n                            <Select options={comunas} styles={customStyleSelect} noOptionsMessage={() => 'Sin resultados'}\r\n                                placeholder={'Seleccione una comuna'} isSearchable={true} ref={clientComuna_ref} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Ciudad</label>\r\n                            <input type=\"text\" className=\"form-control field\"\r\n                                ref={clientCity_ref}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Dirección</label>\r\n                            <input type=\"text\" className=\"form-control field\"\r\n                                ref={clientAddress_ref} defaultValue={clientInfo ? clientInfo.calle : ''}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div ref={technician_info_ref}\r\n                        className={'mb-3 ' + (user.role == 'TECNICO' ? '' : 'd-none')}>\r\n                        <p className=\"lead mb-2\">Información técnico</p>\r\n\r\n                        <div className=\"form-check mb-3\">\r\n                            <input type=\"checkbox\" className=\"form-check-input\" onChange={handleEsExterno} ref={techExtern_ref} />\r\n                            <label className=\"form-check-label\">Es externo</label>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3 d-none\" ref={techCompany_ref}>\r\n                            <label className=\"form-label\">Empresa</label>\r\n                            <input type=\"text\" className=\"form-control field\" ref={techCompanyInput_ref} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-grid\">\r\n                        {isEnabled ? <button className=\"btn btn-outline-danger mb-2\">Desactivar cuenta</button>\r\n                        : <button className=\"btn btn-outline-success mb-2\">Activar cuenta</button>}\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Guardar cambios\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditUser;","import { faEdit, faSearch, faSortAmountUp, faSortAmountDown, faUserMinus, faUserPlus, faPlus, faListAlt, faLaptopHouse } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table, Badge, Pagination, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backend from \"../../../backend\";\r\nimport LoadingContent from \"../../../layout/loading_content\";\r\n\r\nconst EquipmentTable = ({match}) => {\r\n    const [equipmentData, setEquipmentData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/OrdenTrabajo/GetEquipos', {\r\n            params: {\r\n                IdCliente: match.params.id\r\n            }\r\n        })\r\n        .then(_users => {\r\n            setEquipmentData(_users.data);\r\n        })\r\n        .catch(err => {\r\n            // console.log('ERROR');\r\n            setEquipmentData({\r\n                itemsCount: 0,\r\n                pageIndex: 1\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return !equipmentData ? <LoadingContent /> : <EquipmentTableContent equipmentData={equipmentData} match={match} />\r\n}\r\n\r\nconst EquipmentTableContent = ({ equipmentData, match }) => {\r\n    const itemsPerPage = 5;\r\n    const [totalItems, setTotalItems] = useState(equipmentData.itemsCount);\r\n    const [numOfPages, setNumOfPages] = useState(Math.ceil(totalItems / itemsPerPage));\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentFilter, setCurrentFilter] = useState({\r\n        columnName: 'marca',\r\n        dir: 'asc'\r\n    });\r\n    const [customers, setCustomers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/OrdenTrabajo/GetEquipos', {\r\n            params: {\r\n                IdCliente: match.params.id,\r\n                pageSize: itemsPerPage,\r\n                pageIndex: currentPage,\r\n                OrderBy: currentFilter.columnName,\r\n                Order: currentFilter.dir\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(res.data);\r\n            setTotalItems(res.data.itemsCount);\r\n            setNumOfPages(Math.ceil(res.data.itemsCount / itemsPerPage));\r\n            setCustomers(res.data.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, [currentPage, currentFilter]);\r\n\r\n    const nextPage = () => {\r\n        if(currentPage < numOfPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    }\r\n\r\n    const previousPage = () => {\r\n        if(currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    }\r\n\r\n    const firstPage = () => {\r\n        if(currentPage != 1) {\r\n            setCurrentPage(1);\r\n        }\r\n    }\r\n\r\n    const lastPage = () => {\r\n        if(currentPage != numOfPages) {\r\n            setCurrentPage(numOfPages);\r\n        }\r\n    }\r\n\r\n    const filterUsers = (event) => {\r\n        const filterCol = event.target.getAttribute('col');\r\n        let filter_dir = 'asc';\r\n        if(currentFilter.columnName == filterCol && currentFilter.dir == 'asc') {\r\n            filter_dir = 'des';\r\n        }\r\n        setCurrentFilter({\r\n            columnName: filterCol,\r\n            dir: filter_dir\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n                <Link to={'/manage/equipment/add/' + match.params.id} className=\"btn btn-primary\"><FontAwesomeIcon icon={faPlus} />\r\n                    <span className=\"d-none d-md-inline ms-2\">Nuevo</span>\r\n                </Link>\r\n                <div style={{width: '12rem'}}>\r\n                    <div className=\"input-group\">\r\n                        <span className=\"input-group-text\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                        </span>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Table striped hover borderless responsive className=\"mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'marca'}>\r\n                            Marca\r\n                            {currentFilter.columnName == 'marca' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'modelo'}>\r\n                            Modelo\r\n                            {currentFilter.columnName == 'modelo' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'serie'}>\r\n                            Número de serie\r\n                            {currentFilter.columnName == 'serie' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'contrato'}>\r\n                            Contrato\r\n                            {currentFilter.columnName == 'contrato' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'vigencia'}>\r\n                            Vigencia\r\n                            {currentFilter.columnName == 'vigencia' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem'}}>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {customers.map((equipment, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{equipment.marca}</td>\r\n                                <td>{equipment.modelo}</td>\r\n                                <td>{equipment.serie}</td>\r\n                                <td className=\"text-center\">\r\n                                    <Badge pill bg={equipment.contrato ? 'success' : 'warning'}>\r\n                                        {equipment.contrato ? 'SI' : 'NO'}\r\n                                    </Badge>\r\n                                </td>\r\n                                <td className=\"text-center\">{equipment.vigencia === \"--\" ? <Badge pill bg='warning'>No Aplica</Badge> : equipment.vigencia}</td>\r\n                                <td className=\"text-center\">\r\n                                    <OverlayTrigger placement=\"left\"\r\n                                        overlay={<Tooltip>Editar Equipo</Tooltip>}>\r\n                                        <Link className=\"btn btn-outline-secondary text-center me-2\" to={'/manage/equipment/edit/' + equipment.id}> \r\n                                            <FontAwesomeIcon icon={faEdit} />\r\n                                        </Link>\r\n                                    </OverlayTrigger>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n                <caption className=\"pb-0\">\r\n                    <div className=\"d-flex justify-content-between mt-3\">\r\n                        <div>\r\n                            Mostrando elementos {currentPage * itemsPerPage - itemsPerPage + 1} &ndash; {currentPage * itemsPerPage < totalItems ? currentPage * itemsPerPage : totalItems} de {totalItems}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Pagination size=\"sm\">\r\n                                <Pagination.First onClick={firstPage} />\r\n                                <Pagination.Prev  onClick={previousPage} />\r\n\r\n                                {/* {currentPage > 1 ? <Pagination.Ellipsis /> : <></>} */}\r\n\r\n                                <Pagination.Item active>{currentPage}</Pagination.Item>\r\n\r\n                                {/* {numOfPages - currentPage >= 1 ? <Pagination.Ellipsis /> : <></>} */}\r\n\r\n                                <Pagination.Next onClick={nextPage} />\r\n                                <Pagination.Last onClick={lastPage} />\r\n                            </Pagination>\r\n                        </div>\r\n                    </div>\r\n                </caption>\r\n            </Table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EquipmentTable;","import { faLaptopHouse,faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport Backend from \"../../backend\";\r\nimport EquipmentTable from \"./utils/equipment_table\";\r\nimport ButtonBack from \"../../layout/ButtonBack\";\r\n\r\nconst ManageEquipment = ({match}) => {\r\n    const [nameCustomer, setNameCustomer] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getUser', {\r\n            params: {\r\n                IdUser: match.params.id\r\n            }\r\n        })\r\n        .then(res => {\r\n            setNameCustomer(res.data.fullname)\r\n            setLoading(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n    return <Layout content={<ManageEquipmentContent name={nameCustomer} match={match}/>} />;\r\n}\r\n\r\nconst ManageEquipmentContent = ({name, match}) => {\r\n    return (\r\n        \r\n        <div className=\"card p-3 bg-white\" style={{minHeight: '20rem', minWidth: '20rem'}}>\r\n            <div className=\"px-2\">\r\n                <h4 className=\"mb-0\">\r\n                    <FontAwesomeIcon icon={faLaptopHouse} className=\"me-2\" />\r\n                    Gestionar equipos: <span className=\"text-primary\">{name}</span>\r\n                </h4>\r\n                <div className=\"my-2\">\r\n                <ButtonBack to=\"/manage/customers\"/>\r\n            </div>\r\n            </div>\r\n\r\n            <hr className=\"my-3\" />\r\n\r\n            <EquipmentTable match={match}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageEquipment;","import { faArrowLeft, faUserPlus, faLaptopHouse} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport LoadingContent from \"../../layout/loading_content\";\r\nimport Backend from \"../../backend\";\r\nimport OverlayAlert from \"../../layout/utils/overlay_alert\";\r\nimport { useHistory } from \"react-router\";\r\nimport ButtonBack from \"../../layout/ButtonBack\";\r\n\r\nconst AddEquipment = ({ match }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [nameCustomer, setNameCustomer] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getUser', {\r\n            params: {\r\n                IdUser: match.params.id\r\n            }\r\n        })\r\n        .then(res => {\r\n            setNameCustomer(res.data.fullname)\r\n            setLoading(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return loading ? <LoadingContent /> : <Layout content={<AddEquipmentForm match={match} name={nameCustomer}/>} />;\r\n}\r\n\r\nconst AddEquipmentForm = ({ match, name}) => {\r\n    const history = useHistory();\r\n    const brand_ref = useRef();\r\n    const model_ref = useRef();\r\n    const serie_ref = useRef();\r\n    const contract_ref = useRef();\r\n    const contractVig_ref = useRef();\r\n    const contractVigShow_ref = useRef();\r\n\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    const trimFields = () => {\r\n        document.querySelectorAll('.field').forEach(elem => {\r\n            elem.value = elem.value.trim();\r\n        });\r\n    }\r\n\r\n    const handleHasContract = (event) => {\r\n        if(event.target.checked) {\r\n            contractVigShow_ref.current.classList.remove('d-none');\r\n        } else {\r\n            contractVigShow_ref.current.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    const submitEquipment = (event) => {\r\n        event.preventDefault();\r\n        trimFields();\r\n\r\n        let parameters = {}\r\n        let alert_required = false;\r\n\r\n        if(contract_ref.current.checked){\r\n            const required_fields = [brand_ref, model_ref, serie_ref, contractVig_ref];\r\n            required_fields.map(field => {\r\n                field.current.classList.remove('required-field');\r\n                if(!field.current.value) {\r\n                    alert_required = true;\r\n                    field.current.classList.add('required-field');\r\n                }\r\n            });\r\n            parameters = {\r\n                marca: brand_ref.current.value,\r\n                modelo: model_ref.current.value,\r\n                serie: serie_ref.current.value,\r\n                contrato: contract_ref.current.checked,\r\n                vigencia:  contractVig_ref.current.value,\r\n                clienteId: match.params.id\r\n            }\r\n        }\r\n        else{\r\n            const required_fields = [brand_ref, model_ref, serie_ref];\r\n            required_fields.map(field => {\r\n                field.current.classList.remove('required-field');\r\n                if(!field.current.value) {\r\n                    alert_required = true;\r\n                    field.current.classList.add('required-field');\r\n                }\r\n            });\r\n            parameters = {\r\n                marca: brand_ref.current.value,\r\n                modelo: model_ref.current.value,\r\n                serie: serie_ref.current.value,\r\n                contrato: contract_ref.current.checked,\r\n                clienteId: match.params.id\r\n            }\r\n        }\r\n\r\n        if(alert_required) {\r\n            setAlert(\r\n                <OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Debes llenar los campos requeridos\"\r\n                    duration=\"3000\"\r\n                />\r\n            );\r\n            return;\r\n        }        \r\n        Backend.post('/OrdenTrabajo/CreateEquipo', parameters)\r\n            .then(res => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"success\"\r\n                    message=\"El equipo ha sido agregado correctamente\"\r\n                    duration=\"3000\"\r\n                />);\r\n                // setInterval( () => {\r\n                //     history.push(\"/manage/customers\")\r\n                // }, 3000 )\r\n\r\n                brand_ref.current.value = \"\"\r\n                model_ref.current.value = \"\"\r\n                serie_ref.current.value = \"\"\r\n                contract_ref.current.value = \"\"\r\n                contractVig_ref.current.checked = \"\"\r\n            })\r\n            .catch(err => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Ocurrió un error al intentar agregar el equipo. Por favor intente nuevamente más tarde\"\r\n                    duration=\"3000\"\r\n                />);\r\n            });\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {alert}\r\n            <div className=\"my-2\">\r\n                <ButtonBack to=\"/manage/customers\"/>\r\n            </div>\r\n            <div className=\"card p-4 bg-white mx-auto\" style={{maxWidth: '30rem'}}>\r\n                <div className=\"px-2\">\r\n                    <h4 className=\"mb-0\">\r\n                        <FontAwesomeIcon icon={faLaptopHouse} className=\"me-2\" />\r\n                        <strong className=\"text-primary\">{name}</strong><br/> \r\n                        <p className=\"text-muted\">Agregar equipo</p>       \r\n                    </h4>\r\n                </div>\r\n\r\n                <hr className=\"my-3\" />\r\n\r\n                <form onSubmit={submitEquipment}>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Marca</label>\r\n                        <input type=\"text\" name=\"brand\" maxLength=\"50\" className=\"form-control field\" ref={brand_ref} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Modelo</label>\r\n                        <input type=\"text\" name=\"model\" className=\"form-control field\" ref={model_ref} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Número de Serie</label>\r\n                        <input type=\"text\" name=\"serie\" maxLength=\"30\" className=\"form-control field\" ref={serie_ref} />\r\n                    </div>\r\n                    <div className=\"form-check mb-3\">\r\n                            <input type=\"checkbox\" className=\"form-check-input\" id=\"contractCheck\" ref={contract_ref} onChange={handleHasContract} />\r\n                            <label className=\"form-check-label\" htmlFor=\"contractCheck\">¿Con contrato?</label>\r\n                    </div>\r\n                    <div className=\"mb-3 d-none\" ref={contractVigShow_ref}>\r\n                        <label className=\"form-label\">Vigencia</label>\r\n                        <input type=\"date\" name=\"vigencia\" maxLength=\"30\" className=\"form-control field\" ref={contractVig_ref} />\r\n                    </div>\r\n\r\n                    <div className=\"d-grid\">\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Confirmar\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddEquipment;","import { faArrowLeft, faLaptopHouse} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport LoadingContent from \"../../layout/loading_content\";\r\nimport Backend from \"../../backend\";\r\nimport OverlayAlert from \"../../layout/utils/overlay_alert\";\r\nimport ButtonBack from \"../../layout/ButtonBack\";\r\n\r\nconst EditEquipment = ({ match }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [dataEquipment, setDataEquipment] = useState(null);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/OrdenTrabajo/GetEquipo', {\r\n            params: {\r\n                IdEquipo: match.params.id\r\n            }\r\n        })\r\n        .then(res => {\r\n            setDataEquipment(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n        });\r\n\r\n\r\n    }, []);\r\n\r\n    return !dataEquipment ? <LoadingContent /> : <Layout content={<EditEquipmentForm match={match} dataEquipment = {dataEquipment}/>} />;\r\n}\r\n\r\nconst EditEquipmentForm = ({ match, dataEquipment}) => {\r\n    const brand_ref = useRef();\r\n    const model_ref = useRef();\r\n    const serie_ref = useRef();\r\n    const contract_ref = useRef();\r\n    const contractVig_ref = useRef();\r\n    const contractVigShow_ref = useRef();\r\n    \r\n    const [alert, setAlert] = useState(null);\r\n\r\n    const trimFields = () => {\r\n        document.querySelectorAll('.field').forEach(elem => {\r\n            elem.value = elem.value.trim();\r\n        });\r\n    }\r\n\r\n    const handleHasContract = (event) => {\r\n        if(event.target.checked) {\r\n            contractVigShow_ref.current.classList.remove('d-none');\r\n        } else {\r\n            contractVigShow_ref.current.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    const submitEquipment = (event) => {\r\n        event.preventDefault();\r\n        trimFields();\r\n\r\n        let parameters = {}\r\n        let alert_required = false;\r\n\r\n        if(contract_ref.current.checked){\r\n            const required_fields = [brand_ref, model_ref, serie_ref, contractVig_ref];\r\n            required_fields.map(field => {\r\n                field.current.classList.remove('required-field');\r\n                if(!field.current.value) {\r\n                    alert_required = true;\r\n                    field.current.classList.add('required-field');\r\n                }\r\n            });\r\n            parameters = {\r\n                marca: brand_ref.current.value,\r\n                modelo: model_ref.current.value,\r\n                serie: serie_ref.current.value,\r\n                contrato: contract_ref.current.checked,\r\n                vigencia:  contractVig_ref.current.value,\r\n                clienteId: match.params.id\r\n            }\r\n        }\r\n        else{\r\n            const required_fields = [brand_ref, model_ref, serie_ref];\r\n            required_fields.map(field => {\r\n                field.current.classList.remove('required-field');\r\n                if(!field.current.value) {\r\n                    alert_required = true;\r\n                    field.current.classList.add('required-field');\r\n                }\r\n            });\r\n            parameters = {\r\n                marca: brand_ref.current.value,\r\n                modelo: model_ref.current.value,\r\n                serie: serie_ref.current.value,\r\n                contrato: contract_ref.current.checked,\r\n                clienteId: match.params.id\r\n            }\r\n        }\r\n\r\n        if(alert_required) {\r\n            setAlert(\r\n                <OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Debes llenar los campos requeridos\"\r\n                    duration=\"3000\"\r\n                />\r\n            );\r\n            return;\r\n        }        \r\n        Backend.post('/OrdenTrabajo/CreateEquipo', parameters)\r\n            .then(res => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"success\"\r\n                    message=\"El equipo ha sido agregado correctamente\"\r\n                    duration=\"3000\"\r\n                />);\r\n                // setInterval( () => {\r\n                //     history.push(\"/manage/customers\")\r\n                // }, 3000 )\r\n\r\n                brand_ref.current.value = \"\"\r\n                model_ref.current.value = \"\"\r\n                serie_ref.current.value = \"\"\r\n                contract_ref.current.value = \"\"\r\n                contractVig_ref.current.checked = \"\"\r\n            })\r\n            .catch(err => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Ocurrió un error al intentar agregar el equipo. Por favor intente nuevamente más tarde\"\r\n                    duration=\"3000\"\r\n                />);\r\n            });\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {alert}\r\n            <div className=\"my-2\">\r\n                <ButtonBack to={\"/manage/equipment/\"+dataEquipment.clienteId}/>\r\n            </div>\r\n            <div className=\"card p-4 bg-white mx-auto\" style={{maxWidth: '30rem'}}>\r\n                <div className=\"px-2\">\r\n                    <h4 className=\"mb-0\">\r\n                        <FontAwesomeIcon icon={faLaptopHouse} className=\"me-2\" />\r\n                        Editar equipo\r\n                    </h4>\r\n                </div>\r\n\r\n                <hr className=\"my-3\" />\r\n\r\n                <form onSubmit={submitEquipment}>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Marca</label>\r\n                        <input type=\"text\" name=\"brand\" maxLength=\"50\" className=\"form-control field\" ref={brand_ref} defaultValue={dataEquipment.marca} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Modelo</label>\r\n                        <input type=\"text\" name=\"model\" className=\"form-control field\" ref={model_ref} defaultValue={dataEquipment.modelo}/>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Número de Serie</label>\r\n                        <input type=\"text\" name=\"serie\" maxLength=\"30\" className=\"form-control field\" ref={serie_ref} defaultValue={dataEquipment.serie}/>\r\n                    </div>\r\n                    <div className=\"form-check mb-3\">\r\n                            <input type=\"checkbox\" className=\"form-check-input\" id=\"contractCheck\" ref={contract_ref} onChange={handleHasContract} defaultChecked={dataEquipment.contrato}/>\r\n                            <label className=\"form-check-label\" htmlFor=\"contractCheck\">¿Con contrato?</label>\r\n                    </div>\r\n                    <div className={\"mb-3 \"+(dataEquipment.contrato ? \"\" : \"d-none\" )} ref={contractVigShow_ref}>\r\n                        <label className=\"form-label\">Vigencia</label>\r\n                        <input type=\"date\" name=\"vigencia\" className=\"form-control field\" ref={contractVig_ref} defaultValue={dataEquipment.contrato ? new Date(dataEquipment.vigencia).toISOString().substr(0,10) : null } />\r\n                    </div>\r\n\r\n                    <div className=\"d-grid\">\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Confirmar\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditEquipment;","import { faArrowLeft, faFolderPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"../layout\";\r\nimport LoadingContent from \"../layout/loading_content\";\r\nimport Backend from \"../backend\";\r\nimport Select from \"react-select\";\r\nimport customStyleSelect from \"../layout/utils/custom_style_select\";\r\nimport OverlayAlert from \"../layout/utils/overlay_alert\";\r\nimport ButtonBack from \"../layout/ButtonBack\";\r\n\r\nconst CreateRequest = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [regiones, setRegiones] = useState([]);\r\n    const [equipmentUser, setEquipmentUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/OrdenTrabajo/GetMyEquipos', {})\r\n            .then( equipment => {\r\n                setEquipmentUser(equipment.data.data.map(e => {\r\n                    return {\r\n                        value: e.id,\r\n                        label: \"Marca: \"+e.marca+\" | Modelo: \"+e.modelo+\" | Serie: \"+e.serie,\r\n                    }\r\n                }));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n            });\r\n        Backend.get('/Ubicacion/Regiones', {})\r\n            .then(res => {\r\n                setRegiones(res.data.map(region => {\r\n                    return {\r\n                        value: region.id,\r\n                        label: region.name\r\n                    }\r\n                }));\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n            });\r\n        \r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return loading ? <LoadingContent /> : <Layout content={<CreateRequestForm equipmentUser={equipmentUser} regiones={regiones}/>} />;\r\n}\r\n\r\nconst CreateRequestForm = ({ equipmentUser , regiones}) => {\r\n    const [comunas, setComunas] = useState([]);\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    const description_ref = useRef();\r\n    const equipmentId_ref = useRef();\r\n    const region_ref = useRef();\r\n    const comuna_ref = useRef();\r\n    const calle_ref = useRef();\r\n\r\n    const trimFields = () => {\r\n        document.querySelectorAll('.field').forEach(elem => {\r\n            elem.value = elem.value.trim();\r\n        });\r\n    }\r\n\r\n    const handleRegionChange = (event) => {\r\n        setComunas([]);\r\n        comuna_ref.current.clearValue();\r\n        Backend.get('/Ubicacion/Comunas', {\r\n            params: {\r\n                IdRegion: event.value\r\n            }\r\n        })\r\n        .then(res => {\r\n            setComunas(res.data.map(comuna => {\r\n                return {\r\n                    value: comuna.id,\r\n                    label: comuna.name\r\n                }\r\n            }));\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const submitRequest = (event) => {\r\n        event.preventDefault();\r\n        trimFields();\r\n\r\n        let alert_required = false;\r\n\r\n        let equipment = equipmentId_ref.current.getValue();\r\n        const equipment_control = equipmentId_ref.current.controlRef;\r\n        if(equipment_control) { equipment_control.classList.remove('required-field'); }\r\n        if(!equipment.length) {\r\n            alert_required = true;\r\n            if(equipment_control) { equipment_control.classList.add('required-field'); }\r\n        } else {\r\n            equipment = equipment[0].equipment;\r\n        }\r\n\r\n        let region = region_ref.current.getValue();\r\n        const region_control = region_ref.current.controlRef;\r\n        if(region_control) { region_control.classList.remove('required-field'); }\r\n        if(!region.length) {\r\n            alert_required = true;\r\n            if(region_control) { region_control.classList.add('required-field'); }\r\n        } else {\r\n            region = region[0].region;\r\n        }\r\n\r\n        let comuna = comuna_ref.current.getValue();\r\n        const comuna_control = comuna_ref.current.controlRef;\r\n        if(comuna_control) { comuna_control.classList.remove('required-field'); }\r\n        if(!comuna.length) {\r\n            alert_required = true;\r\n            if(comuna_control) { comuna_control.classList.add('required-field'); }\r\n        } else {\r\n            comuna = comuna[0].comuna;\r\n        }\r\n\r\n        const required_fields = [description_ref, calle_ref];\r\n        required_fields.map(field => {\r\n            field.current.classList.remove('required-field');\r\n            if(!field.current.value) {\r\n                alert_required = true;\r\n                field.current.classList.add('required-field');\r\n            }\r\n        });\r\n\r\n        if(alert_required) {\r\n            setAlert(\r\n                <OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Debes llenar los campos requeridos\"\r\n                    duration=\"3000\"\r\n                />\r\n            );\r\n            return;\r\n        }\r\n\r\n        Backend.post('/OrdenTrabajo/CreateSolicitud', {\r\n            descripcion: description_ref.current.value,\r\n            equipoId: equipmentId_ref.current.getValue()[0].value,\r\n            regionId: region_ref.current.getValue()[0].value,\r\n            comunaId: comuna_ref.current.getValue()[0].value,\r\n            calle: calle_ref.current.value\r\n        })\r\n        .then(res => {\r\n            description_ref.current.value = \"\"\r\n            calle_ref.current.value = \"\"\r\n            comuna_ref.current.clearValue();\r\n\r\n            setAlert(<OverlayAlert\r\n                variant=\"success\"\r\n                message=\"La solicitud ha sido ingresada con éxito.\"\r\n                duration=\"3000\"\r\n            />);\r\n        })\r\n        .catch(err => {\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Ocurrió un error al intentar ingresar la solicitud. Por favor intente nuevamente más tarde\"\r\n                duration=\"3000\"\r\n            />);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {alert}\r\n            <div className=\"my-2\">\r\n                <ButtonBack to=\"/home\"/>\r\n            </div>\r\n            <div className=\"card p-4 bg-white mx-auto\" style={{maxWidth: '60rem'}}>\r\n                <div className=\"px-2\">\r\n                    <h4 className=\"mb-0 text-bold\">\r\n                        <FontAwesomeIcon icon={faFolderPlus} className=\"me-2\" />\r\n                        Crear solicitud\r\n                    </h4>\r\n                </div>\r\n\r\n                <hr className=\"my-3\" />\r\n\r\n                <form onSubmit={submitRequest}>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Seleccione el equipo asociado a la solicitud</label>\r\n                        <Select options={equipmentUser} styles={customStyleSelect}  ref={equipmentId_ref}\r\n                            placeholder={'Seleccione...'} isSearchable={true} noOptionsMessage={() => 'Sin resultados'}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Región</label>\r\n                        <Select options={regiones} styles={customStyleSelect} onChange={handleRegionChange}\r\n                            placeholder={'Seleccione una región...'} isSearchable={true} noOptionsMessage={() => 'Sin resultados'} ref={region_ref}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Comuna</label>\r\n                        <Select options={comunas} styles={customStyleSelect}\r\n                            placeholder={'Seleccione una región...'} isSearchable={true} noOptionsMessage={() => 'Sin resultados'} ref={comuna_ref}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Calle</label>\r\n                        <input type=\"text\" name=\"userName\" maxLength=\"50\" className=\"form-control field\" ref={calle_ref} placeholder=\"ej: Calle 001\"/>\r\n                    </div>\r\n                    <div className=\"form-group mb-4\">\r\n                        <label className=\"mb-3\" htmlFor=\"description\">Descripción</label>\r\n                        <textarea className=\"form-control\" id=\"description\" rows=\"6\" ref={description_ref}></textarea>\r\n                    </div>                    \r\n                    <div className=\"d-grid\">\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Confirmar\" />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateRequest;","import { faFacebook, faLinkedin, faTwitter, faInstagram } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { getCurrentUser } from \"../helpers/getData\";\r\nimport Layout from \"./layout\";\r\n\r\nconst Home = () => {\r\n    return <Layout content={<HomeContent />} />;\r\n}\r\n\r\nconst HomeContent = () => {\r\n    const currentUser = getCurrentUser();\r\n    return (\r\n        <div className=\"row p-4 justify-content-center\">\r\n            {alert}\r\n            <h1 className=\"text-secondary text-center text-bold\">¡BIENVENIDO <span className=\"text-primary\">{currentUser.fullname.toUpperCase()}</span>!</h1>\r\n            <div className=\"card col-12 col-md-5 m-3\" style={{minHeight: \"20rem\"}}>\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title text-primary\"><span className=\"text-secondary\">Video:</span> ¿Sabía qué?</h3>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Descubre por qué la industria del papel es una de las industrias más eco-responsable y contribuye a la reforestación. ¿Quieres saber más?</h6>\r\n                    <div className=\"video-responsive\">\r\n                        <iframe src='https://www.youtube.com/embed/WSXhkV3FNqI'\r\n                            frameborder='0'\r\n                            allow='autoplay; encrypted-media'\r\n                            allowFullScreen\r\n                            title='video'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card col-12 col-md-5 m-3\" style={{minHeight: \"15rem\"}}>\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title text-primary\">Card 2</h3>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Subtitulo</h6>\r\n                    \r\n                    \r\n                   \r\n                </div>\r\n            </div>\r\n            <div className=\"card col-12 col-md-6 m-3\" style={{minHeight: \"15rem\"}}>\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title text-primary\">Card 1</h3>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Subtitulo</h6>\r\n                    \r\n                   \r\n                   \r\n                </div>\r\n            </div>\r\n            <div className=\"card col-12 col-md-4 m-3\" style={{minHeight: \"15rem\"}}>\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title text-primary\">Síguenos</h3>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">En nuestras redes sociales</h6>\r\n                    \r\n                    <div className=\"mt-5\" style={{width:\"100%\", textAlign: \"center\", lineHeight: \"100px\"}}>\r\n                        <a href=\"https://www.linkedin.com/company/antalis/\" target=\"_blank\" rel=\"noreferrer\" className=\"card-link text-secondary\"><FontAwesomeIcon size=\"3x\" icon={faLinkedin} /></a>\r\n                        <a href=\"https://twitter.com/Antalischile\" target=\"_blank\" rel=\"noreferrer\" className=\"card-link text-secondary\"><FontAwesomeIcon size=\"3x\" icon={faTwitter} /></a>\r\n                        <a href=\"https://www.facebook.com/AntalisChile/\" target=\"_blank\" rel=\"noreferrer\" className=\"card-link text-secondary\"><FontAwesomeIcon size=\"3x\" icon={faFacebook} /></a>\r\n                        <a href=\"https://www.instagram.com/antalischile/?hl=es\" target=\"_blank\" rel=\"noreferrer\" className=\"card-link text-secondary\"><FontAwesomeIcon size=\"3x\" icon={faInstagram} /></a>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { faCheckCircle, faExclamationCircle, faInfoCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst createUUID = () => {\r\n    var dt = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = (dt + Math.random()*16)%16 | 0;\r\n        dt = Math.floor(dt/16);\r\n        return (c=='x' ? r :(r&0x3|0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nconst OverlayAlertOnLoad = ({duration }) => {\r\n    const styles = {\r\n        position: 'fixed',\r\n        zIndex: '100000',\r\n        right: '1em',\r\n        bottom: '1em',\r\n        borderRadius: \"100%\"\r\n    }\r\n\r\n    const uuid = createUUID();\r\n\r\n    const alert_ref = useRef();\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            if(alert_ref.current) {\r\n                alert_ref.current.classList.remove('alert-fade-in');\r\n                alert_ref.current.classList.add('alert-fade-out');\r\n            }\r\n        }, duration);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='alert alert-secondary alert-fade-in' role=\"alert\"\r\n            style={styles} ref={alert_ref} key={uuid}>\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OverlayAlertOnLoad;","import moment from \"moment\";\r\nimport \"moment/locale/es-mx\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {  faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Backend from \"../../backend\";\r\nimport OverlayAlertOnLoad from \"../../layout/utils/overlay_alert_onload\";\r\nimport OverlayAlert from \"../../layout/utils/overlay_alert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListRequestClient = ({ url , parameters}) => {\r\n    const [requests, setRequests] = useState([]);\r\n    const [alert, setAlert] = useState(null);\r\n    moment().locale('es')\r\n    const search_ref = useRef();\r\n\r\n    const onSearch = () => {\r\n        setAlert(<OverlayAlertOnLoad\r\n            variant=\"info\"\r\n            duration=\"500\"\r\n        />);\r\n        Backend.get(url, { \r\n            params:{\r\n                Solicitud: search_ref.current.value\r\n            }\r\n        })\r\n        .then(res => {\r\n\r\n            setRequests(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Ha ocurrido un error. Intente nuevamente\"\r\n                duration=\"500\"\r\n            />);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setAlert(<OverlayAlertOnLoad\r\n            variant=\"info\"\r\n            duration=\"500\"\r\n        />);\r\n        Backend.get(url, parameters)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setRequests(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Ha ocurrido un error. Intente nuevamente\"\r\n                duration=\"500\"\r\n            />);\r\n        });\r\n    \r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {alert}\r\n            <div className=\"w-100\" style={{position: \"relative\"}}>\r\n                <div className=\"input-group mb-3\" style={{width: \"22rem\" , marginRight: \"0px\", marginLeft: \"auto\"}}>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" aria-label=\"Buscar\" aria-describedby=\"buttonSearch\" ref={search_ref} onKeyDown={e => e.key===\"Enter\" ? onSearch() : null}/>\r\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" id=\"buttonSearch\" onClick={onSearch}>\r\n                        <FontAwesomeIcon icon={faSearch} className=\"\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {requests.map((request)=>(\r\n                <div className=\"card mb-4\" style={{minHeight:\"15rem\"}} key={request.id}>\r\n                    <div className=\"card-body\" style={{position: \"relative\"}}>\r\n                        <h3 className=\"text-secondary h3-request\">Solicitud <span className=\"text-primary\">{request.marca} {request.modelo}</span> <span className=\"text-muted h3-span-request\">Serie: {request.serie}</span></h3>\r\n                        <hr/>\r\n                        {request.estadoId === \"79b12fb2-f9ff-4a7a-ba4a-0da48637442f\" ? <span className=\"badge bg-info\" style={{fontSize:\"1rem\", cursor: \"pointer\"}} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"La solicitud ya fue ingresada en el sistema pero no ha sido atendida.\">{request.estado}</span> : null}\r\n                        {request.estadoId === \"7b6aba68-70e6-4174-98b5-67232808b29d\" ? <span className=\"badge bg-success\" style={{fontSize:\"1rem\", cursor: \"pointer\"}} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"La solicitud ya fue atendida y está en curso.\">{request.estado}</span> : null}\r\n                        {request.estadoId === \"bc4edb94-0c87-4845-85a3-4b9317a2923e\" ? <span className=\"badge bg-dark\" style={{fontSize:\"1rem\", cursor: \"pointer\"}} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"La solicitud ya fue completada y está cerrada.\">{request.estado}</span> : null}\r\n\r\n                        <div className=\"text-muted dates-request\" >\r\n                            Fecha de creación: {moment(request.fechaCreacion).format(\"DD-MM-yyyy HH:mm\")} \r\n                        </div>\r\n\r\n                        <Link className=\"btn btn-primary float-btn-request\" to={request.estadoId === \"79b12fb2-f9ff-4a7a-ba4a-0da48637442f\" ? `/otrequest/view/${request.id}` : `/ot/view/${request.id}`}>Abrir</Link>\r\n                    </div>\r\n                </div>    \r\n            \r\n            \r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListRequestClient;","import { faFolderOpen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, {useState , useEffect} from \"react\";\r\nimport Layout from \"../layout\";\r\nimport ListRequestClient from \"./utils/ListRequestClient\";\r\nimport Backend from \"../backend\";\r\nimport LoadingContent from \"../layout/loading_content\";\r\n\r\nconst OtRequest = () => {\r\n    \r\n    return <Layout content={<OtRequestContent/>} />;\r\n}\r\n\r\nconst OtRequestContent = () => {\r\n    return (\r\n        <div className=\"card p-3 bg-white mx-auto\" style={{minHeight: '20rem', minWidth: '20rem', maxWidth: \"80rem\"}}>\r\n            <div className=\"px-2\">\r\n                <h4 className=\"mb-0 text-bold\">\r\n                    <FontAwesomeIcon icon={faFolderOpen} className=\"me-2\" />\r\n                    Mis solicitudes\r\n                </h4>\r\n            </div>\r\n\r\n            <hr className=\"my-3\" />\r\n            <ListRequestClient url='/OrdenTrabajo/MisSolicitudes' parameters={{}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OtRequest;","export default __webpack_public_path__ + \"static/media/user-icon-secondary.72089ac2.svg\";","import {faUser, faEdit, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Layout from \"./layout\";\r\nimport LoadingContent from \"./layout/loading_content\";\r\nimport Backend from \"./backend\";\r\nimport OverlayAlert from \"./layout/utils/overlay_alert\";\r\nimport userIcon from \"../img/user-icon-secondary.svg\"\r\nimport { getCurrentRole, getCurrentUser } from \"../helpers/getData\";\r\n\r\nconst ConfigureAccount = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [userData, setUserData] = useState([]);\r\n    const [reloadData, setReloadData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const currentUser = getCurrentUser();\r\n        const currentRole = getCurrentRole();\r\n\r\n        if(currentRole === \"Tecnico\"){\r\n            Backend.get('/Accounts/GetTecnico', {\r\n                params: {\r\n                IdUser: currentUser.id\r\n                }\r\n            })\r\n            .then(user => {\r\n                setUserData(user.data)\r\n                setLoading(false);\r\n                console.log(userData)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n            });\r\n        }\r\n        else{            \r\n            setUserData(getCurrentUser())\r\n            setLoading(false);\r\n        }\r\n    }, [reloadData]);\r\n\r\n    return loading ? <LoadingContent /> : <Layout content={<ConfigureAccountContent userData = {userData}  setReloadData = {setReloadData}/>} />;\r\n}\r\n\r\nconst ConfigureAccountContent = ({ userData, setReloadData }) => {\r\n        const [alert, setAlert] = useState(null);\r\n        const [toggleChangePass, setToggleChangePass] = useState(true);\r\n        const [toggleEditAccount, setToggleEditAccount] = useState(false);\r\n        console.log(userData);\r\n        const changepass_ref = useRef(false);\r\n        const dataAccount_ref = useRef();\r\n        const editAccount_ref = useRef();\r\n\r\n        const userName_ref = useRef();\r\n        const userEmail_ref = useRef();\r\n        const userPhone_ref = useRef();\r\n        const oldPass_ref = useRef();\r\n        const newPass_ref = useRef();\r\n        const confirmPass_ref = useRef();\r\n\r\n        // const clientRegion_ref = useRef();\r\n        // const clientComuna_ref = useRef();\r\n        // const clientCity_ref = useRef();\r\n        // const clientAddress_ref = useRef();\r\n\r\n\r\n        const trimFields = () => {\r\n            document.querySelectorAll('.field').forEach(elem => {\r\n                elem.value = elem.value.trim();\r\n            });\r\n        }\r\n\r\n        const handleChangePass = () => {\r\n            setToggleChangePass(!toggleChangePass);\r\n            switch(toggleChangePass) {\r\n                case false:\r\n                    changepass_ref.current.classList.remove('d-none');\r\n                    changepass_ref.current.classList.add('d-none');\r\n                    break;\r\n                case true:\r\n                    changepass_ref.current.classList.add('d-none');\r\n                    changepass_ref.current.classList.remove('d-none');\r\n                    break;\r\n                default:\r\n                    changepass_ref.current.classList.add('d-none');\r\n                    changepass_ref.current.classList.add('d-none');\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const handleEditAccount = () => {\r\n            setToggleEditAccount(!toggleEditAccount);\r\n            switch(toggleEditAccount) {\r\n                case false:\r\n                    dataAccount_ref.current.classList.remove('d-none');\r\n                    dataAccount_ref.current.classList.add('d-none');\r\n\r\n                    editAccount_ref.current.classList.add('d-none');\r\n                    editAccount_ref.current.classList.remove('d-none');\r\n                    break;\r\n                case true:\r\n                    dataAccount_ref.current.classList.add('d-none');\r\n                    dataAccount_ref.current.classList.remove('d-none');\r\n\r\n                    editAccount_ref.current.classList.remove('d-none');\r\n                    editAccount_ref.current.classList.add('d-none');\r\n                    break;\r\n                default:\r\n                    changepass_ref.current.classList.add('d-none');\r\n                    changepass_ref.current.classList.add('d-none');\r\n                    break;\r\n            }\r\n        }\r\n        \r\n        const SubmitChangePass = (event) => {\r\n            event.preventDefault();\r\n            trimFields();\r\n\r\n            const patternPass = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*;¡ñ])(?=.{6,})\");\r\n            let alert_required = false;\r\n            const required_fields = [oldPass_ref, newPass_ref, confirmPass_ref];\r\n            required_fields.map(field => {\r\n                field.current.classList.remove('required-field');\r\n                if(!field.current.value) {\r\n                    alert_required = true;\r\n                    field.current.classList.add('required-field');\r\n            }\r\n            \r\n            if(alert_required) {\r\n                setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"Debes llenar los campos requeridos\"\r\n                        duration=\"3000\"\r\n                    />\r\n                );\r\n                return;\r\n            }\r\n            if(newPass_ref.current.value !== confirmPass_ref.current.value){\r\n                setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"Los campos contraseña nueva y confirmar contraseña deben ser iguales\"\r\n                        duration=\"3000\"\r\n                    />\r\n                );\r\n                return;\r\n            }\r\n            if(!patternPass.test(newPass_ref.current.value)){\r\n                setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"La contraseña debe cumplir con los requisitos mencionados\"\r\n                        duration=\"3000\"\r\n                    />\r\n                );\r\n                return;\r\n            }\r\n            Backend.post('/Auth/ChangePassword', {\r\n                currentPassword: oldPass_ref.current.value,\r\n                newPassword: newPass_ref.current.value,\r\n                confirmNewPassword: confirmPass_ref.current.value\r\n            })\r\n            .then(res => {\r\n                oldPass_ref.current.value = \"\";\r\n                newPass_ref.current.value = \"\";\r\n                confirmPass_ref.current.value = \"\";\r\n                setAlert(\r\n                <OverlayAlert\r\n                        variant=\"success\"\r\n                        message=\"La contraseña se ha actualizado correctamente\"\r\n                        duration=\"3000\"\r\n                    />\r\n                );\r\n            })\r\n            .catch(err => {\r\n                if(err.response.data.errors.includes(\"Optimistic concurrency failure, object has been modified.\")){\r\n                    setAlert(\r\n                        <OverlayAlert\r\n                                variant=\"success\"\r\n                                message=\"La contraseña se ha actualizado correctamente\"\r\n                                duration=\"3000\"\r\n                            />\r\n                        );\r\n                    return;\r\n                }\r\n                else if(err.response.data.errors.includes(\"Incorrect password.\")){\r\n                    setAlert(\r\n                        <OverlayAlert\r\n                            variant=\"danger\"\r\n                            message=\"La contraseña actual no es correcta.\"\r\n                            duration=\"3000\"\r\n                        />);\r\n                    return;\r\n                }\r\n                else if(err.response.data.errors.includes(\"Passwords must have at least one non alphanumeric character.\")){\r\n                    setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"La nueva contraseña debe tener almenos un caracter especial (!¡@#$%)\"\r\n                        duration=\"3000\"\r\n                    />);\r\n                    return;\r\n                }\r\n                else if(err.response.data.errors.includes(\"Passwords must have at least one digit ('0'-'9').\")){\r\n                    setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"La contraseña debe tener al menos un dígito\"\r\n                        duration=\"3000\"\r\n                    />);\r\n                    return;\r\n                }\r\n                else if(err.response.data.errors.includes(\"Passwords must have at least one uppercase ('A'-'Z').\")){\r\n                    setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"La contraseña debe tener al menos una letra mayúscula\"\r\n                        duration=\"3000\"\r\n                    />);\r\n                    return;\r\n                }\r\n                else if(err.response.data.errors.includes(\"Passwords must have at least one lowercase ('a'-'z').\")){\r\n                    setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"La contraseña debe tener al menos una letra minúscula\"\r\n                        duration=\"3000\"\r\n                    />);\r\n                    return;\r\n                }\r\n                else if(err.response.data.errors.includes(\"Passwords must be at least 6 characters.\")){\r\n                    setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"La contraseña debe tener al menos un largo de 6 carácteres\"\r\n                        duration=\"3000\"\r\n                    />);\r\n                    return;\r\n                }\r\n                else{\r\n                    setAlert(\r\n                    <OverlayAlert\r\n                        variant=\"danger\"\r\n                        message=\"Ha ocurrido un error mientras se intentaba cambiar la contraseña, intente nuevamente\"\r\n                        duration=\"3000\"\r\n                    />);\r\n                }\r\n            });\r\n\r\n        });\r\n        }\r\n\r\n        const submitForm = (event) => {\r\n        event.preventDefault();\r\n        trimFields();\r\n        setAlert(\r\n            <OverlayAlert\r\n                variant=\"info\"\r\n                message=\"Cargando...\"\r\n                duration=\"3000\"\r\n            />\r\n        );\r\n\r\n        let alert_required = false;\r\n\r\n        const required_fields = [userEmail_ref, userPhone_ref];\r\n        required_fields.map(field => {\r\n            field.current.classList.remove('required-field');\r\n            if(!field.current.value) {\r\n                alert_required = true;\r\n                field.current.classList.add('required-field');\r\n            }\r\n        });\r\n\r\n        if(alert_required) {\r\n            setAlert(\r\n                <OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Debes llenar los campos requeridos\"\r\n                    duration=\"3000\"\r\n                />\r\n            );\r\n            return;\r\n        }\r\n        Backend.post('/Accounts/EditMyAccount', {\r\n            email: userEmail_ref.current.value,\r\n            phone: userPhone_ref.current.value\r\n            })\r\n            .then(res => {\r\n                Backend.get('/Accounts/currentUser', {\r\n                })\r\n                .then(_user => {\r\n                    let user = _user.data;\r\n                    localStorage.setItem('current_user', JSON.stringify(user));\r\n                });\r\n                userData.email = userEmail_ref.current.value;\r\n                userData.phone = userPhone_ref.current.value;\r\n                setAlert(<OverlayAlert\r\n                    variant=\"success\"\r\n                    message=\"Se han cambiado los datos correctamente\"\r\n                    duration=\"3000\"\r\n                />);\r\n                // setInterval( () => {\r\n                //     history.push(\"/manage/customers\")\r\n                // }, 3000 )\r\n                handleEditAccount()\r\n\r\n            })\r\n            .catch(err => {\r\n                setAlert(<OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Ocurrió un error al intentar editar sus datos. Por favor intente nuevamente más tarde\"\r\n                    duration=\"3000\"\r\n                />);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {alert}\r\n            <div className=\"card p-4 bg-white mx-auto\" style={{maxWidth: '30rem'}}>\r\n                <div className=\"px-2\">\r\n                    <h4 className=\"mb-0 text-bold\">\r\n                        <FontAwesomeIcon icon={faUser} className=\"me-2\" />\r\n                        Mi cuenta\r\n                    </h4>\r\n                </div>\r\n\r\n                <hr className=\"my-3\" />\r\n                <div className=\"mb-3\" style={{textAlign: \"center\"}} ref={dataAccount_ref}>\r\n                    <img className=\"mb-3\" src={userIcon} alt=\"Logo\" width=\"100\" style={{color: \"#ffff\"}}/>\r\n                    <div className=\"mb-4\" style={{lineHeight: \"0.8\"}}>\r\n                        <p style={{fontWeight: \"bold\"}}>Nombre</p>\r\n                        <p className=\"pl-4 d-block\">{userData.fullname}</p>\r\n                    </div>\r\n                    <div className=\"mb-3\" style={{lineHeight: \"0.8\"}}>\r\n                        <p style={{fontWeight: \"bold\"}}>Correo electrónico</p>\r\n                        <p className=\"pl-4 d-block\">{userData.email}</p>\r\n                    </div>\r\n                    <div className=\"mb-3\" style={{lineHeight: \"0.8\"}}>\r\n                        <p style={{fontWeight: \"bold\"}}>Télefono</p>\r\n                        <p className=\"pl-4 d-block\">{userData.phone ? userData.phone : \"Sin datos\"}</p>\r\n                    </div>\r\n                    {\r\n                        userData.role == \"TECNICO\" && userData.esExterno === true ? \r\n                        (\r\n                            <div className=\"mb-3\" style={{lineHeight: \"0.8\"}}>\r\n                                <p style={{fontWeight: \"bold\"}}>Empresa</p>\r\n                                <p className=\"pl-4 d-block\">{userData.empresa ? userData.empresa : \"Sin datos\"}</p>\r\n                            </div>\r\n                        )\r\n                        :null\r\n                    }\r\n\r\n                    <div className=\"d-grid mt-5\">\r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={handleEditAccount}>\r\n                        <FontAwesomeIcon icon={faEdit} className=\"me-2\" />Editar cuenta\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <form onSubmit={submitForm} className=\"mb-3 d-none\" ref={editAccount_ref}>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Correo electrónico</label>\r\n                        <input type=\"email\" name=\"userEmail\" className=\"form-control field\" ref={userEmail_ref} defaultValue={userData.email}/>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Teléfono</label>\r\n                        <input type=\"text\" name=\"userPhone\" maxLength=\"30\" className=\"form-control field\" ref={userPhone_ref} defaultValue={userData.phone}/>\r\n                    </div>\r\n                    <div className=\"d-grid\">\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Confirmar cambios\" />\r\n                    </div>\r\n                    <a className=\"link-primary mt-3 d-block\" style={{cursor:\"pointer\"}} onClick={handleEditAccount}> <FontAwesomeIcon icon={faArrowLeft} className=\"me-2\" />Cancelar cambios</a>\r\n                </form>\r\n                \r\n                <p className=\"d-grid\">\r\n                    <button className=\"btn btn-block text-white\" type=\"button\" onClick={handleChangePass} style={{background: \"#5A6268\"}}>\r\n                        Cambiar contraseña\r\n                    </button>\r\n                </p>\r\n                <div className=\"d-none\" ref={changepass_ref} >\r\n                    <form className=\"card card-body\" onSubmit={SubmitChangePass}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Contraseña actual</label>\r\n                            <input type=\"password\" name=\"userPhone\" maxLength=\"30\" className=\"form-control field\" ref={oldPass_ref}/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Contraseña nueva</label>\r\n                            <input type=\"password\" name=\"userPhone\" maxLength=\"30\" className=\"form-control field\" ref={newPass_ref}/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Confirme nueva contraseña</label>\r\n                            <input type=\"password\" name=\"userPhone\" maxLength=\"30\" className=\"form-control field\" ref={confirmPass_ref}/>\r\n                        </div>\r\n                        <div className=\"d-grid\">\r\n                            <input type=\"submit\" className=\"btn btn-secondary\" value=\"Cambiar\" />\r\n                        </div>\r\n                        <small className=\"text-muted mt-3\">La contraseña debe contener al menos:</small>\r\n                        <ul className=\"text-muted\">\r\n                            <li><small>Un largo mínimo de 6 carácteres</small></li>\r\n                            <li><small>Una letra mayúscula</small></li>\r\n                            <li><small>Una letra minúscula</small></li>\r\n                            <li><small>Un carácter especial</small></li>\r\n                            <li><small>Un número</small></li>\r\n                        </ul>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfigureAccount;","import React from \"react\";\r\nimport Layout from \"../layout\";\r\n\r\nconst NotFound = () => {\r\n    return <Layout content={<NotFoundContent />} />;\r\n}\r\n\r\nconst NotFoundContent = () => {\r\n    return (\r\n        <div id=\"notfound\">\r\n            <div className=\"notfound\">\r\n                <div className=\"notfound404\">\r\n                    <h3>UPS! Esta página no existe. ☹️</h3>\r\n                    <h1>\r\n                        <span>4</span>\r\n                        <span>0</span>\r\n                        <span>4</span>\r\n                    </h1>\r\n                    \r\n                </div>\r\n                <h2>Lo sentimos, puede que esta página no exista o no esté disponible, siga navegando.</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import { faEdit, faSearch, faSortAmountUp, faSortAmountDown, faUserMinus, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table, Badge, Pagination, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backend from \"../../../backend\";\r\nimport LoadingContent from \"../../../layout/loading_content\";\r\n\r\nconst TechnicalsTable = () => {\r\n    const [usersData, setUsersData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getTecnicos', {})\r\n        .then(_users => {\r\n            setUsersData(_users.data);\r\n        })\r\n        .catch(err => {\r\n            // console.log('ERROR');\r\n            setUsersData({\r\n                itemsCount: 0,\r\n                pageIndex: 1\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return !usersData ? <LoadingContent /> : <TechnicalsTableContent usersData={usersData} />\r\n}\r\n\r\nconst TechnicalsTableContent = ({ usersData }) => {\r\n    const itemsPerPage = 5;\r\n    const [totalItems, setTotalItems] = useState(usersData.itemsCount);\r\n    const [numOfPages, setNumOfPages] = useState(Math.ceil(totalItems / itemsPerPage));\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentFilter, setCurrentFilter] = useState({\r\n        columnName: 'fullname',\r\n        dir: 'asc'\r\n    });\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getTecnicos', {\r\n            params: {\r\n                pageSize: itemsPerPage,\r\n                pageIndex: currentPage,\r\n                OrderBy: currentFilter.columnName,\r\n                Order: currentFilter.dir\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(res.data);\r\n            setTotalItems(res.data.itemsCount);\r\n            setNumOfPages(Math.ceil(res.data.itemsCount / itemsPerPage));\r\n            setUsers(res.data.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, [currentPage, currentFilter]);\r\n\r\n    const nextPage = () => {\r\n        if(currentPage < numOfPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    }\r\n\r\n    const previousPage = () => {\r\n        if(currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    }\r\n\r\n    const firstPage = () => {\r\n        if(currentPage != 1) {\r\n            setCurrentPage(1);\r\n        }\r\n    }\r\n\r\n    const lastPage = () => {\r\n        if(currentPage != numOfPages) {\r\n            setCurrentPage(numOfPages);\r\n        }\r\n    }\r\n\r\n    const filterUsers = (event) => {\r\n        const filterCol = event.target.getAttribute('col');\r\n        let filter_dir = 'asc';\r\n        if(currentFilter.columnName == filterCol && currentFilter.dir == 'asc') {\r\n            filter_dir = 'des';\r\n        }\r\n        setCurrentFilter({\r\n            columnName: filterCol,\r\n            dir: filter_dir\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n                <Link to=\"/manage/users/new\" className=\"btn btn-primary\">\r\n                    <FontAwesomeIcon icon={faUserPlus} />\r\n                    <span className=\"d-none d-md-inline ms-2\">Nuevo</span>\r\n                </Link>\r\n\r\n                <div style={{width: '12rem'}}>\r\n                    <div className=\"input-group\">\r\n                        <span className=\"input-group-text\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                        </span>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Table striped hover borderless responsive className=\"mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'fullname'}>\r\n                            Nombre\r\n                            {currentFilter.columnName == 'fullname' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'role'}>\r\n                            Rol\r\n                            {currentFilter.columnName == 'role' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th style={{minWidth: '12rem', cursor: 'pointer'}} onClick={filterUsers} col={'email'}>\r\n                            Correo electrónico\r\n                            {currentFilter.columnName == 'email' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'phone'}>\r\n                            Teléfono\r\n                            {currentFilter.columnName == 'phone' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem', cursor: 'pointer'}} onClick={filterUsers} col={'isEnabled'}>\r\n                            Estado\r\n                            {currentFilter.columnName == 'isEnabled' ?\r\n                                <FontAwesomeIcon icon={currentFilter.dir == 'asc' ? faSortAmountUp : faSortAmountDown} className=\"ms-2\" />\r\n                                : <></>}\r\n                        </th>\r\n                        <th className=\"text-center\" style={{minWidth: '8rem'}}>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{user.fullname}</td>\r\n                                <td>{user.role}</td>\r\n                                <td>{user.email}</td>\r\n                                <td className=\"text-center\">{user.phone || <>&ndash;</>}</td>\r\n                                <td className=\"text-center\">\r\n                                    <Badge pill bg={user.isEnabled ? 'success' : 'danger'}>\r\n                                        {user.isEnabled ? 'Activo' : 'Inactivo'}\r\n                                    </Badge>\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <OverlayTrigger placement=\"left\"\r\n                                        overlay={<Tooltip>Editar usuario</Tooltip>}>\r\n                                        <Link className=\"btn btn-outline-secondary text-center me-2\"\r\n                                              to={'/manage/users/edit/' + user.id}>\r\n                                                <FontAwesomeIcon icon={faEdit} />\r\n                                        </Link>\r\n                                    </OverlayTrigger>\r\n\r\n                                    <OverlayTrigger placement=\"left\"\r\n                                        overlay={<Tooltip>Desactivar cuenta</Tooltip>}>\r\n                                        <Link className=\"btn btn-outline-secondary text-center\"\r\n                                              to=\"\">\r\n                                                <FontAwesomeIcon icon={faUserMinus} />\r\n                                        </Link>\r\n                                    </OverlayTrigger>\r\n\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n                <caption className=\"pb-0\">\r\n                    <div className=\"d-flex justify-content-between mt-3\">\r\n                        <div>\r\n                            Mostrando elementos {currentPage * itemsPerPage - itemsPerPage + 1} &ndash; {currentPage * itemsPerPage < totalItems ? currentPage * itemsPerPage : totalItems} de {totalItems}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Pagination size=\"sm\">\r\n                                <Pagination.First onClick={firstPage} />\r\n                                <Pagination.Prev  onClick={previousPage} />\r\n\r\n                                {/* {currentPage > 1 ? <Pagination.Ellipsis /> : <></>} */}\r\n\r\n                                <Pagination.Item active>{currentPage}</Pagination.Item>\r\n\r\n                                {/* {numOfPages - currentPage >= 1 ? <Pagination.Ellipsis /> : <></>} */}\r\n\r\n                                <Pagination.Next onClick={nextPage} />\r\n                                <Pagination.Last onClick={lastPage} />\r\n                            </Pagination>\r\n                        </div>\r\n                    </div>\r\n                </caption>\r\n            </Table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TechnicalsTable;","import { faHardHat } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport TechnicalsTable from \"./utils/technicals_table\";\r\n\r\nconst ManageTechnicals = () => {\r\n    return <Layout content={<ManageTechnicalsContent />} />;\r\n}\r\n\r\nconst ManageTechnicalsContent = () => {\r\n    return (\r\n        <div className=\"card p-3 bg-white\" style={{minHeight: '20rem', minWidth: '20rem'}}>\r\n            <div className=\"px-2\">\r\n                <h4 className=\"mb-0 text-bold\">\r\n                    <FontAwesomeIcon icon={faHardHat} className=\"me-2\" />\r\n                    Gestionar técnicos\r\n                </h4>\r\n            </div>\r\n\r\n            <hr className=\"my-3\" />\r\n\r\n            <TechnicalsTable />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageTechnicals;","import moment from \"moment\";\r\nimport \"moment/locale/es-mx\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Backend from \"../../backend\";\r\nimport OverlayAlertOnLoad from \"../../layout/utils/overlay_alert_onload\";\r\nimport OverlayAlert from \"../../layout/utils/overlay_alert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListRequest = ({ url }) => {\r\n    const [requests, setRequests] = useState([]);\r\n    const [pagination, setPagination] = useState(\r\n        {\r\n            itemsCount: \"\",\r\n            pageIndex: \"\",\r\n            pageSize: 4\r\n        });\r\n    const [alert, setAlert] = useState(null);\r\n    const search_ref = useRef();\r\n    moment().locale('es');\r\n\r\n    const onSearch = () => {\r\n        setAlert(<OverlayAlertOnLoad\r\n            variant=\"info\"\r\n            duration=\"500\"\r\n        />);\r\n        Backend.get(url, { \r\n            params:{\r\n                Solicitud: search_ref.current.value,\r\n                pageSize: pagination.pageSize\r\n            }\r\n        })\r\n        .then(res => {\r\n            \r\n            setRequests(res.data.data);\r\n            setPagination({\r\n                ...\r\n                {\r\n                    itemsCount: res.data.itemsCount,\r\n                    pageIndex: res.data.pageIndex,\r\n                    pageSize: pagination.pageSize\r\n                }\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Ha ocurrido un error. Intente nuevamente\"\r\n                duration=\"500\"\r\n            />);\r\n        });\r\n    };\r\n\r\n    const handleChangePagination = (index) => {\r\n        setAlert(<OverlayAlertOnLoad\r\n            variant=\"info\"\r\n            duration=\"500\"\r\n        />);\r\n\r\n        let params = {}\r\n\r\n        if(search_ref.current.value !== \"\"){\r\n            params = {\r\n                Solicitud: search_ref.current.value,\r\n                pageIndex: parseInt(index),\r\n                pageSize: pagination.pageSize\r\n            }\r\n        }\r\n        else{\r\n            params = {\r\n                pageIndex: parseInt(index),\r\n                pageSize: pagination.pageSize\r\n            }\r\n        }\r\n        Backend.get(url, { params\r\n            \r\n        })\r\n        .then(res => {\r\n            setRequests(res.data.data);\r\n            setPagination({\r\n                ...\r\n                {\r\n                    itemsCount: res.data.itemsCount,\r\n                    pageIndex: res.data.pageIndex,\r\n                    pageSize: pagination.pageSize\r\n                }\r\n            });\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Ha ocurrido un error. Intente nuevamente\"\r\n                duration=\"500\"\r\n            />);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAlert(<OverlayAlertOnLoad\r\n            variant=\"info\"\r\n            duration=\"500\"\r\n        />);\r\n        Backend.get(url, {\r\n            params:{\r\n                pageSize: pagination.pageSize\r\n            }\r\n        })\r\n        .then(res => {\r\n            setRequests(res.data.data);\r\n            setPagination({\r\n                ...\r\n                {\r\n                    itemsCount: res.data.itemsCount,\r\n                    pageIndex: res.data.pageIndex,\r\n                    pageSize: pagination.pageSize\r\n                }\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Ha ocurrido un error. Intente nuevamente\"\r\n                duration=\"500\"\r\n            />);\r\n        });\r\n    \r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {alert}\r\n                <div className=\"col-12 col-md-6 input-group mb-3\" style={{width: \"22rem\" , marginRight: \"0px\", marginLeft: \"auto\"}}>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" aria-label=\"Buscar\" aria-describedby=\"buttonSearch\" ref={search_ref} onKeyDown={e => e.key===\"Enter\" ? onSearch() : null}/>\r\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" id=\"buttonSearch\" onClick={onSearch}>\r\n                        <FontAwesomeIcon icon={faSearch} className=\"\" />\r\n                    </button>\r\n                </div>\r\n            \r\n            {requests.map((request)=>(\r\n                <div className=\"card mb-4\" style={{minHeight:\"15rem\"}} key={request.id}>\r\n                    <div className=\"card-body\" style={{position: \"relative\"}}>\r\n                        <h3 className=\"text-secondary h3-request\">Solicitud <span className=\"text-primary\">{request.marca} {request.modelo}</span> <span className=\"text-muted h3-span-request\">Serie: {request.serie}</span></h3>\r\n                        <hr/>\r\n                        {request.estadoId === \"79b12fb2-f9ff-4a7a-ba4a-0da48637442f\" ? <span className=\"badge bg-info\" style={{fontSize:\"1rem\", cursor: \"pointer\"}} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"La solicitud ya fue ingresada en el sistema pero no ha sido atendida.\">{request.estado}</span> : null}\r\n                        {request.estadoId === \"7b6aba68-70e6-4174-98b5-67232808b29d\" ? <span className=\"badge bg-success\" style={{fontSize:\"1rem\", cursor: \"pointer\"}} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"La solicitud ya fue atendida y está en curso.\">{request.estado}</span> : null}\r\n                        {request.estadoId === \"bc4edb94-0c87-4845-85a3-4b9317a2923e\" ? <span className=\"badge bg-dark\" style={{fontSize:\"1rem\", cursor: \"pointer\"}} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"La solicitud ya fue completada y está cerrada.\">{request.estado}</span> : null}\r\n                        <div className=\"mt-2 text-bold\" >\r\n                            <p><span style={{color:\"#3f3f3f\"}}>Cliente: </span><span style={{color: \"#727272\"}}>{request.fullnameCliente} ({request.emailCliente}) </span></p>\r\n                        </div>\r\n                        <div className=\"text-muted dates-request\" >\r\n                            Fecha de creación: {moment(request.fechaCreacion).format(\"DD-MM-yyyy HH:mm\")} \r\n                        </div>\r\n                        <Link className=\"btn btn-primary float-btn-request text-bold\" to={\"/ot/create/\"+request.id}>Atender</Link>\r\n                    </div>\r\n                </div>    \r\n            \r\n            \r\n            ))}\r\n            <div style={{width: \"22rem\" , marginRight: \"0px\", marginLeft: \"auto\"}}>\r\n                <nav aria-label=\"...\">\r\n                    <ul className=\"pagination\">\r\n                        <li className={pagination.pageIndex === 1 ? \"page-item disabled\" : \"page-item\"}>\r\n                        <button className=\"page-link\" onClick={() => handleChangePagination(parseInt(pagination.pageIndex-1))}>Anterior</button>\r\n                        </li>\r\n                        {\r\n                            pagination.pageIndex !== 1 && pagination.pageIndex !== 2 ? \r\n                            (<li className=\"page-item\" aria-current=\"page\">\r\n                                <button className=\"page-link\" onClick={() => handleChangePagination(parseInt(pagination.pageIndex-1))}>{pagination.pageIndex-2}</button>\r\n                            </li>) \r\n                            : null\r\n                        }\r\n                        {\r\n                            pagination.pageIndex !== 1 ? \r\n                            (<li className=\"page-item\" aria-current=\"page\">\r\n                                <button className=\"page-link\" onClick={() => handleChangePagination(parseInt(pagination.pageIndex-1))}>{pagination.pageIndex-1}</button>\r\n                            </li>) \r\n                            : null\r\n                        }\r\n                        <li className=\"page-item active\" aria-current=\"page\">\r\n                        <button className=\"page-link\" href=\"#\">{pagination.pageIndex}</button>\r\n                        </li>\r\n                        {\r\n                            pagination.pageIndex < Math.ceil(parseInt(pagination.itemsCount)/parseInt(pagination.pageSize)) ? \r\n                            (<li className=\"page-item\" aria-current=\"page\">\r\n                                <button className=\"page-link\" onClick={() => handleChangePagination(parseInt(pagination.pageIndex+1))}>{pagination.pageIndex+1}</button>\r\n                            </li>) \r\n                            : null\r\n                        }\r\n                        {\r\n                            pagination.pageIndex < Math.ceil(parseInt(pagination.itemsCount)/parseInt(pagination.pageSize))-1? \r\n                            (<li className=\"page-item\" aria-current=\"page\">\r\n                                <button className=\"page-link\" onClick={() => handleChangePagination(parseInt(pagination.pageIndex+1))}>{pagination.pageIndex+2}</button>\r\n                            </li>) \r\n                            : null\r\n                        }\r\n                        <li className={pagination.pageIndex === parseInt(pagination.itemsCount)/parseInt(pagination.pageSize) || pagination.pageIndex >= parseInt(pagination.itemsCount)/parseInt(pagination.pageSize) ? \"page-item disabled\" : \"page-item\"}>\r\n                            <button className=\"page-link\" onClick={() => handleChangePagination(parseInt(pagination.pageIndex)+1)}>Siguiente</button>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListRequest;","import { faClock, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Layout from \"../layout\";\r\nimport ListRequest from \"./utils/ListRequest\";\r\n\r\nconst AllRequest = () => {\r\n    \r\n    return <Layout content={<OtRequestContent/>} />;\r\n}\r\n\r\nconst OtRequestContent = () => {\r\n    return (\r\n        <div className=\"card p-3 bg-white mx-auto\" style={{minHeight: '20rem', minWidth: '20rem', maxWidth: \"80rem\"}}>\r\n            <div className=\"px-2\">\r\n                <h4 className=\"mb-0 text-bold\">\r\n                    <FontAwesomeIcon icon={faClock} className=\"me-2\" />\r\n                    Solicitudes de OT\r\n                </h4>\r\n            </div>\r\n\r\n            <hr className=\"my-3\" />\r\n             <ListRequest url='/OrdenTrabajo/pendingSolicitudes' parameters={{}}/> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllRequest;","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst LoadingCalendar = () => {\r\n    return (\r\n      <div style={{borderRadius: \"5%\", border: \"1px solid #dddddd\", background: \"#F3F3F3\"}}>\r\n        <table style={{height: \"4rem\" , textAlign: \"center\", width: \"100%\"}}>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"align-middle text-primary\">\r\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Cargando agenda\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingCalendar;","import React, {useState , useEffect, Fragment} from \"react\";\r\nimport {Calendar, momentLocalizer, dateFnsLocalizer  } from 'react-big-calendar'\r\nimport { faCalendar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es-mx\";\r\nimport LoadingCalendar from \"./LoadingCalendar\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport Backend from \"../../backend\";\r\n\r\nconst CalendarTechnical = ({technicalId}) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setLoading(true);\r\n      Backend.get('/OrdenTrabajo/getPendingOTTecnico', {\r\n        params:{\r\n          IdTecnico: technicalId\r\n        }\r\n      })\r\n      .then(res => {\r\n          setEvents(res.data.data.map(ot=> {\r\n            return {\r\n              title: `${ot.clienteFullname} ${ot.comuna} ${ot.calle}`,\r\n              start: ot.fechaVisita,\r\n              end: ot.fechaVisita,\r\n            }\r\n          }))\r\n          setLoading(false);\r\n      })\r\n      .catch(err => {\r\n          console.log(err);\r\n          setLoading(false);\r\n      });\r\n\r\n    }, [technicalId]);\r\n    \r\n    return loading ? <LoadingCalendar/> : <CalendarContent myEventsList={events}/>;\r\n}\r\n\r\nconst CalendarContent = ({myEventsList}) => {\r\n  const localizer = momentLocalizer(moment);\r\n  const MessagesCalendar = {\r\n    next:\"Siguiente\",\r\n    previous:\"Atrás\",\r\n    today:\"Ahora\", \r\n    month: \"Mes\", \r\n    week: \"Semana\", \r\n    day: \"Día\", \r\n    yesterday: \"Ayer\", \r\n    tomorrow: \"Mañana\", \r\n    noEventsInRange: \"No hay eventos en este rango.\"\r\n  };\r\n  return (\r\n    <Accordion>\r\n      <Accordion.Item eventKey=\"1\">\r\n          <Accordion.Header><span className=\"text-bold\"><FontAwesomeIcon icon={faCalendar} className=\"me-2\" /> Agenda Técnico</span></Accordion.Header>\r\n          <Accordion.Body style={{height: 550}}>\r\n            <Calendar className=\"p-2\" localizer={localizer} events={myEventsList} \r\n              style={{ height: \"100%\",borderRadius: \"2%\", border: \"1px solid #dddddd\", background: \"#F3F3F3\" }} \r\n              messages={MessagesCalendar}  />\r\n          </Accordion.Body>\r\n      </Accordion.Item>\r\n    </Accordion>\r\n  );  \r\n}\r\n\r\nexport default CalendarTechnical;","export const TipoActividad = [\r\n    {\r\n        value : \"8ee19a57-e816-4e1f-b1af-c2235364f39b\",\r\n        label : \"Capacitación\"\r\n    },\r\n    {\r\n        value : \"4bc27b27-6fcd-450d-a34e-b2f69caebee5\",\r\n        label : \"Demo\"\r\n    },\r\n    {\r\n        value : \"e37af115-9ce1-4eb8-b07b-98b028a85ed3\",\r\n        label : \"Diagnóstico\"\r\n    },\r\n    {\r\n        value : \"9f55c8d6-35e5-44c6-8234-c05e5f98b5e0\",\r\n        label : \"Instalación\"\r\n    },\r\n    {\r\n        value : \"f7e2c02d-beb1-48cf-98be-47c2bda87cce\",\r\n        label : \"Llamada de servicio\"\r\n    },\r\n    {\r\n        value : \"d2b3fd7f-4452-4ff7-89d1-a0032ed0f65e\",\r\n        label : \"Mantención\"\r\n    },\r\n    {\r\n        value : \"9efe5797-df62-4263-803e-a4dc89f82491\",\r\n        label : \"Pre-site\"\r\n    },\r\n    {\r\n        value : \"3f8eb080-1bf7-48e6-8fed-dfbe755a04df\",\r\n        label : \"Supervisión\"\r\n    },\r\n]\r\n","import { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nconst AccordionDataRequest = ({defaultActiveKey,fullnameCliente, emailCliente, phoneCliente, marca, modelo, serie, fechaCreacion, descripcion, region, comuna, calle}) => {\r\n    return (\r\n        <Accordion {...defaultActiveKey}>\r\n            <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header><span className=\"text-bold\"><FontAwesomeIcon icon={faInfoCircle} className=\"me-2\" /> Datos solicitud</span></Accordion.Header>\r\n                <Accordion.Body>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Cliente: </span> {fullnameCliente} (<a href={`mailto:${emailCliente}`}>{emailCliente}</a>)\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Teléfono: </span> {phoneCliente}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Marca Equipo:</span> {marca}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Modelo Equipo:</span> {modelo}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Serie Equipo:</span> {serie}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Fecha de ingreso solicitud: </span> {moment(fechaCreacion).format(\"DD-MM-yyyy HH:mm\")}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Región: </span> {region}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Comuna: </span> {comuna}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Calle: </span> {calle}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <span className=\"text-bold\">Descripción: </span><br/>\r\n                        {descripcion}\r\n                    </div>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </Accordion>\r\n    );\r\n} \r\n\r\nexport default AccordionDataRequest;","export const requiredSelect = (select_ref, alert_required) => {\r\n    let select = select_ref.current.getValue();\r\n    const select_control = select_ref.current.controlRef;\r\n    if(select_control) { select_control.classList.remove('required-field'); }\r\n    if(!select.length) {\r\n        alert_required = true;\r\n        if(select_control) { select_control.classList.add('required-field'); }\r\n    } \r\n}","import { faBriefcase, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, {useState , useEffect, Fragment, useRef} from \"react\";\r\nimport Layout from \"../layout\";\r\nimport Backend from \"../backend\";\r\nimport LoadingContent from \"../layout/loading_content\";\r\nimport ButtonBack from \"../layout/ButtonBack\";\r\nimport Select from \"react-select\";\r\nimport customStyleSelect from \"../layout/utils/custom_style_select\";\r\nimport CalendarTechnical from \"./utils/CalendarTechnical\";\r\nimport OverlayAlert from \"../layout/utils/overlay_alert\";\r\nimport { TipoActividad } from \"../../helpers/IdActividad\";\r\nimport AccordionDataRequest from \"./utils/accordionDataRequest\";\r\nimport { requiredSelect } from \"../../helpers/requiredSelect\";\r\nimport moment from \"moment\";\r\n\r\nconst CreateOT = ({match}) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [regiones, setRegiones] = useState([]);\r\n    const [technicals, setTechnicals] = useState([]);\r\n    const [dataSolicitud, setDataSolicitud] = useState({\r\n        contrato: \"\",\r\n        descripcion: \"\",\r\n        emailCliente: \"\",\r\n        equipId: \"\",\r\n        fechaCreacion: \"\",\r\n        fullnameCliente: \"\",\r\n        id: \"\",\r\n        idCliente: \"\",\r\n        marca: \"\",\r\n        modelo: \"\",\r\n        phoneCliente: \"\",\r\n        serie: \"\",\r\n        vigenciaContrato: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        Backend.get('/Accounts/getTecnicos', {})\r\n        .then(res => {\r\n            setTechnicals(res.data.data.map(tec => {\r\n                if(tec.isEnabled){\r\n                    return {\r\n                        value: tec.id,\r\n                        label: `${tec.fullname} (${tec.email}) (fono: ${tec.phone})`,\r\n                        technical: tec.fullname\r\n                    }\r\n                }\r\n            }));\r\n            Backend.get('/OrdenTrabajo/getSolicitud', {\r\n                params: { \r\n                    IdSolicitud: match.params.idrequest\r\n                }\r\n            })\r\n            .then(res => {\r\n                setDataSolicitud(res.data)\r\n                Backend.get('/Ubicacion/Regiones', {})\r\n                .then(res => {\r\n                    setRegiones(res.data.map(region => {\r\n                        return {\r\n                            value: region.id,\r\n                            label: region.name\r\n                        }\r\n                    }));\r\n                    setLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    setLoading(false);\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n    \r\n    return loading ? <LoadingContent /> : <Layout content={<CreateOTContent technicals={technicals} dataSolicitud={dataSolicitud} regiones={regiones}/>} />;\r\n}\r\n\r\nconst CreateOTContent = ({technicals, dataSolicitud, regiones}) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [comunas, setComunas] = useState([]);\r\n    const [technicalAsiggned, setTechnicalAssigned] = useState(\"\");\r\n    const [alert, setAlert] = useState(null);\r\n    const horarios = [\r\n        {\r\n            label: \"Mañana\", \r\n            value: \"AM\",\r\n        },\r\n        {\r\n            label: \"Tarde\", \r\n            value: \"PM\",\r\n        }\r\n    ]    \r\n\r\n    const actividad_ref = useRef();\r\n    const tecnico_ref = useRef();\r\n    const diaVisita_ref = useRef();\r\n    const horario_ref = useRef();\r\n    const tiempoSLA_ref = useRef();\r\n\r\n    const handleTechnicalAssigned = (e) => {\r\n        setTechnicalAssigned(\"\");\r\n        setTechnicalAssigned(e.value)\r\n    }\r\n\r\n    const SubmitCreateOT = (e) => {\r\n        e.preventDefault();\r\n        console.log(actividad_ref.current.value)\r\n        let alert_required = false;\r\n\r\n        requiredSelect(tecnico_ref, alert_required);\r\n        requiredSelect(actividad_ref, alert_required);\r\n        requiredSelect(horario_ref, alert_required);\r\n\r\n        const required_fields = [diaVisita_ref];\r\n        required_fields.map(field => {\r\n            field.current.classList.remove('required-field');\r\n            if(!field.current.value) {\r\n                alert_required = true;\r\n                field.current.classList.add('required-field');\r\n            }\r\n        });\r\n\r\n        if(alert_required) {\r\n            setAlert(\r\n                <OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Debes llenar los campos requeridos\"\r\n                    duration=\"3000\"\r\n                />\r\n            );\r\n            return;\r\n        }\r\n        if(isNaN(tiempoSLA_ref.current.value)){\r\n            setAlert(\r\n                <OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Tiempo SLA debe ser numérico\"\r\n                    duration=\"3000\"\r\n                />\r\n            );\r\n            return;\r\n        }\r\n\r\n        Backend.post('/OrdenTrabajo/createOT', {\r\n            solicitudId: dataSolicitud.id,\r\n            tecnicoId: tecnico_ref.current.getValue()[0].value,\r\n            tipoActividadId: actividad_ref.current.getValue()[0].value,\r\n            fechaVisita: diaVisita_ref.current.value,\r\n            horario: horario_ref.current.getValue()[0].value,\r\n            tiempo: tiempoSLA_ref.current.value\r\n        })\r\n        .then(res => {\r\n            setAlert(\r\n                <OverlayAlert\r\n                    variant=\"success\"\r\n                    message=\"Orden de trabajo ingresada con éxito\"\r\n                    duration=\"3000\"\r\n                />\r\n            );            \r\n        })\r\n        .catch(err => {\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Ocurrió un error al ingresar la OT. Por favor intente nuevamente más tarde\"\r\n                duration=\"3000\"\r\n            />);\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ButtonBack to=\"/otrequest/pending\" />\r\n            {alert}\r\n            <div>\r\n                <div className=\"card p-3 bg-white mx-auto\" style={{minHeight: '20rem', minWidth: '20rem', maxWidth: \"60rem\"}}>\r\n                    <div className=\"px-2\">\r\n                        <h4 className=\"mb-0 text-bold\">\r\n                            <FontAwesomeIcon icon={faBriefcase} className=\"me-2\" />\r\n                            Generar orden de trabajo\r\n                        </h4>\r\n                    </div>\r\n                    <hr className=\"my-3\" />\r\n                    <form className=\"row m-4\" onSubmit={SubmitCreateOT}>\r\n                        <div className=\"mb-3\">\r\n                            <AccordionDataRequest fullnameCliente={dataSolicitud.fullnameCliente} \r\n                                                  emailCliente={dataSolicitud.emailCliente}\r\n                                                  phoneCliente={dataSolicitud.phoneCliente}\r\n                                                  marca={dataSolicitud.marca}\r\n                                                  modelo={dataSolicitud.modelo}\r\n                                                  serie={dataSolicitud.serie}\r\n                                                  fechaCreacion={dataSolicitud.fechaCreacion}\r\n                                                  descripcion={dataSolicitud.descripcion}\r\n                                                  region={dataSolicitud.region}\r\n                                                  comuna={dataSolicitud.comuna}\r\n                                                  calle={dataSolicitud.calle}/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Tipo de actividad</label>\r\n                            <Select options={TipoActividad} styles={customStyleSelect} ref={actividad_ref}\r\n                                    placeholder={'Seleccione un horario...'} isSearchable={true} noOptionsMessage={() => 'Sin resultados'}\r\n                                />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Técnico</label>\r\n                            <Select options={technicals} styles={customStyleSelect} onChange={handleTechnicalAssigned} ref={tecnico_ref}\r\n                                placeholder={'Seleccione un tecnico para ver su agenda'} isSearchable={true} noOptionsMessage={() => 'Sin resultados'}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            {technicalAsiggned !== \"\" \r\n                                ? (\r\n                                    <Fragment>\r\n                                        <CalendarTechnical technicalId={technicalAsiggned}/>\r\n                                        <small className=\"text-muted mx-auto\">Esta ventana es solo para visualizar la agenda, seleccione el horario de visita en el campo de abajo </small>\r\n                                    </Fragment>\r\n                                )\r\n                                : null}\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 mb-3\">\r\n                            <label className=\"form-label\">Seleccione el día de la visita</label>\r\n                            <input type=\"date\" maxLength=\"50\" className=\"form-control field\"  ref={diaVisita_ref}/>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 mb-3\">\r\n                        <label className=\"form-label\">Mañana/Tarde</label>\r\n                            <Select options={horarios} styles={customStyleSelect} ref={horario_ref}\r\n                                    placeholder={'Seleccione un horario...'} isSearchable={true} noOptionsMessage={() => 'Sin resultados'}\r\n                                />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Tiempo SLA</label>\r\n                            <input type=\"number\" name=\"userName\" maxLength=\"50\" className=\"form-control field\" ref={tiempoSLA_ref} />\r\n                        </div>\r\n                        <div className=\"d-grid gap-2 mb-3 mt-4\">\r\n                            <button className=\"btn btn-primary\">Generar OT</button>\r\n                        </div>\r\n                    </form>\r\n                </div>                \r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateOT;","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst LoadingComments = () => {\r\n    return (\r\n      <div style={{borderRadius: \"5%\", border: \"1px solid #dddddd\", background: \"#F3F3F3\"}}>\r\n        <table style={{height: \"40rem\" , textAlign: \"center\", width: \"100%\"}}>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"align-middle text-primary\">\r\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Cargando comentarios\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingComments;","import { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Comment = ({fullname, role, datetime, text}) => {\r\n    const cardMyComment = {\r\n        border: \"1px solid #F50C7D\",\r\n        borderRadius: \"30px\",\r\n        borderTopRightRadius: \"0px\"\r\n    }\r\n    const cardComment = {\r\n        border: \"1px solid #0F034E\",\r\n        borderRadius: \"30px\",\r\n        borderTopLeftRadius: \"0px\"\r\n    }\r\n\r\n    return (\r\n        <div className={`card p-2 mb-2`}  style={fullname === \"Yo\" ? cardMyComment : cardComment}>\r\n            {\r\n                fullname === \"Yo\" \r\n                ? (<span className=\"text-bold text-primary comment-my-name\"><span className=\"text-muted\" style={{color: \"gray\", fontWeight: \"normal\", fontSize: \".9rem\"}}>{role}</span> Yo <FontAwesomeIcon icon={faUserCircle}/></span>)\r\n                : (<span className=\"text-bold text-secondary comment-name-another\"> <FontAwesomeIcon icon={faUserCircle}/> {fullname} <span className=\"text-muted\" style={{color: \"gray\", fontWeight: \"normal\", fontSize: \".9rem\"}}>{role}</span></span>)\r\n            }\r\n            <p style={{paddingLeft: \"1rem\", fontSize: \"1.1rem\"}}>\r\n                {text}\r\n            </p>\r\n            <span className={`text-muted ${fullname === \"Yo\" ? \"comment-my-time\" : \"comment-time-another\"}`}>{moment(datetime).fromNow()}</span>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Comment;","import { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingComments from \"./LoadingComments\";\r\nimport InputEmoji from 'react-input-emoji'\r\nimport Comment from \"./Comment\"\r\nimport Backend from \"../../backend\";\r\nimport OverlayAlertOnLoad from \"../../layout/utils/overlay_alert_onload\";\r\nimport OverlayAlert from \"../../layout/utils/overlay_alert\";\r\nimport { getCurrentFullname } from \"../../../helpers/getData\";\r\n\r\n\r\nconst CommentsOT = ({idOT, setAlert}) => {\r\n    const [myName, setMyName] = useState(getCurrentFullname())\r\n    const [loading, setLoading] = useState(true);\r\n    const [comments, setComments] = useState([\r\n    ]);\r\n    const [newComment, setNewComment] = useState(0);\r\n\r\n    useEffect(()=> {\r\n        Backend.get('/OrdenTrabajo/getComentarios', {\r\n            params: {\r\n                idOT: idOT\r\n            }\r\n        })\r\n        .then(res => {\r\n            setComments(res.data.map( comment => {\r\n                return {\r\n                    fullname: (comment.fullname === myName ? \"Yo\" : comment.fullname),\r\n                    role: comment.role,\r\n                    datetime: comment.datetime,\r\n                    text: comment.text\r\n                }\r\n            }));\r\n            setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            setAlert(<OverlayAlert\r\n                variant=\"danger\"\r\n                message=\"Ocurrió un error cargando los comentarios. Por favor intente nuevamente más tarde\"\r\n                duration=\"4000\"\r\n            />);\r\n        });\r\n    }, [newComment])\r\n\r\n    return loading ? <LoadingComments/> : <CommentsOTContent comments={comments} setNewComment={setNewComment} NewComment={newComment} idOT={idOT} setAlert={setAlert} setLoading={setLoading}/>\r\n}\r\n\r\nconst CommentsOTContent = ({comments, idOT, setAlert, setNewComment, NewComment}) => {\r\n    const handleComment = (e) => {\r\n        setAlert(\r\n            <OverlayAlertOnLoad\r\n            duration=\"1000\"\r\n        />);\r\n        \r\n\r\n        if(e.trim()){\r\n            Backend.post('/OrdenTrabajo/createComentario', {\r\n                idOT: idOT,\r\n                texto: e\r\n            })\r\n            .then(res => {\r\n                setNewComment(NewComment+1);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setAlert(<OverlayAlert\r\n                    variant=\"danger\"\r\n                    message=\"Ocurrió un error al intentar agregar el comentario. Por favor intente nuevamente más tarde\"\r\n                    duration=\"4000\"\r\n                />);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"card p-3 bg-white\" style={{minHeight: '45rem', maxHeight: '80vh'}}>\r\n            \r\n            <div className=\"card mb-2 p-4 overflow-auto\" style={{background: \"#efedfc\", minHeight: \"45rem\"}}>\r\n                {\r\n                    comments.map(com => (\r\n                        <Comment key={com.datetime} fullname={com.fullname} role={com.role} datetime={com.datetime} text={com.text}/>\r\n                    ))\r\n                }\r\n                {\r\n                    comments.length === 0 \r\n                        ? (\r\n                            <span className=\"text-center text-bold\" style={{marginTop: \"20rem\", color: \"#7672a0\"}}>Aún no hay comentarios... <br/> ¡Empieza tú!😁</span>\r\n                        )\r\n                        : null\r\n                }\r\n            </div>\r\n            <div className=\"w-100\">\r\n                <InputEmoji cleanOnEnter placeholder=\"Agrega un comentario en la solicitud...\" onEnter={handleComment} borderColor=\"#C6C7C8\"/>                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentsOT;","import { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../layout\";\r\nimport {Tabs, Tab } from \"react-bootstrap\"\r\nimport AccordionDataRequest from \"./utils/accordionDataRequest\";\r\nimport CommentsOT from \"./utils/CommentsOT\";\r\nimport Backend from \"../backend\";\r\nimport LoadingContent from \"../layout/loading_content\";\r\n\r\nconst ViewOT = ({match}) => {\r\n    const [alert, setAlert] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [dataSolicitud, setDataSolicitud] = useState({\r\n        idSolicitud : \"fd971d67-69c1-4138-80b5-dcdd4db652ae\",\r\n        idOT: \"fd971d67-69c1-4138-80b5-dcdd4db652ae\",\r\n        marca: \"Acer\",\r\n        modelo: \"Predator\",\r\n        serie: \"AB781HA\",\r\n        fullnameCliente: \"Alfredo\",\r\n        emailCliente: \"dasas@fgsd.com\",\r\n        phoneCliente: \"32323223\",\r\n        fechaCreacion: new Date(),\r\n        descripcion: \"sddsjaskdl;jdsakl;dsajkldasjasdkljdaskldsjaklasdjlkadsklj\",\r\n        region: \"RM\",\r\n        comuna: \"AAA\",\r\n        calle: \"calle 123\"\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        Backend.get('/OrdenTrabajo/getOT', {params: {\r\n            idSolicitud: match.params.id\r\n                 }})\r\n                .then(res => {\r\n                    setDataSolicitud(res.data)\r\n                    setLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    setLoading(false);\r\n                });\r\n\r\n    }, []);\r\n\r\n    return loading ? <LoadingContent/> : <Layout content={<ViewOTContent dataSolicitud={dataSolicitud} alert={alert} setAlert={setAlert}/>} />;\r\n}\r\n\r\nconst ViewOTContent = ({dataSolicitud, alert, setAlert}) => {\r\n    return (\r\n        <div className=\"card p-3 bg-white\" style={{minHeight: '20rem', minWidth: '20rem'}}>\r\n            {alert}\r\n            <div className=\"px-2\">                    \r\n                <h3 className=\"text-secondary h3-request\"><FontAwesomeIcon icon={faBriefcase} className=\"me-2\" /> Solicitud <span className=\"text-primary\">{dataSolicitud.marca} {dataSolicitud.modelo}</span> <span className=\"text-muted h3-span-request\">Serie: {dataSolicitud.serie}</span></h3>              \r\n            </div>\r\n            <hr className=\"my-3\" />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-7 mb-3\">\r\n                    \r\n                    <AccordionDataRequest \r\n                                          defaultActiveKey={{defaultActiveKey : \"0\"}}\r\n                                          fullnameCliente={dataSolicitud.fullnameCliente} \r\n                                          emailCliente={dataSolicitud.emailCliente}\r\n                                          phoneCliente={dataSolicitud.phoneCliente}\r\n                                          marca={dataSolicitud.marca}\r\n                                          modelo={dataSolicitud.modelo}\r\n                                          serie={dataSolicitud.serie}\r\n                                          fechaCreacion={dataSolicitud.fechaCreacion}\r\n                                          descripcion={dataSolicitud.descripcion}\r\n                                          region={dataSolicitud.region}\r\n                                          comuna={dataSolicitud.comuna}\r\n                                          calle={dataSolicitud.calle}/>\r\n\r\n                </div>\r\n                <div className=\"col-12 col-md-5 mb-3\">\r\n                    <CommentsOT idOT={dataSolicitud.idOT} setAlert={setAlert}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewOT;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\nimport Login from './components/login';\r\nimport Layout from './components/layout';\r\nimport RecoverPassword from './components/recover_pass/recover';\r\nimport RecuperatePassword from './components/recover_pass/recuperate';\r\nimport ManageUsers from './components/manage/users';\r\nimport ManageCustomers from './components/manage/customers';\r\nimport RegisterUser from './components/manage/users/register.jsx';\r\nimport EditUser from './components/manage/users/edit.jsx';\r\nimport ManageEquipment from './components/manage/customers/manageEquipment';\r\nimport AddEquipment from './components/manage/customers/addEquipment';\r\nimport EditEquipment from './components/manage/customers/editEquipment';\r\nimport CreateRequest from './components/ot_request/CreateRequest';\r\nimport Home from './components/home';\r\nimport OtRequest from './components/ot_request';\r\nimport ConfigureAccount from './components/configureAccount';\r\nimport NotFound from './components/layout_error/NotFound';\r\nimport ManageTechnicals from './components/manage/technicals';\r\nimport AllRequest from './components/ot_request/allRequests';\r\nimport CreateOT from './components/ot/createOT';\r\nimport ViewOT from './components/ot/ViewOT';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        \r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/layout\" component={Layout} />\r\n        <Route exact path=\"/recover\" component={RecoverPassword} />\r\n        <Route path=\"/recuperate\" component={RecuperatePassword} />\r\n        <Route path=\"/createpassword\" component={RecuperatePassword} />\r\n        <Route path=\"/configureaccount\" component={ConfigureAccount} />\r\n        <Route exact path=\"/manage/users\" component={ManageUsers} />\r\n        <Route exact path=\"/manage/users/new\" component={RegisterUser} />\r\n        <Route exact path=\"/manage/users/edit/:id\" component={EditUser} />\r\n        <Route exact path=\"/manage/customers\" component={ManageCustomers} />\r\n        <Route exact path=\"/manage/technicals\" component={ManageTechnicals} />\r\n        {/* Equipment */}\r\n        <Route exact path=\"/manage/equipment/add/:id\" component={AddEquipment} />\r\n        <Route exact path=\"/manage/equipment/edit/:id\" component={EditEquipment} />\r\n        <Route exact path=\"/manage/equipment/:id\" component={ManageEquipment} />\r\n        {/* OT Request */}\r\n        <Route exact path=\"/otrequest/pending\" component={AllRequest} />\r\n        <Route exact path=\"/otrequest\" component={OtRequest} />\r\n        <Route exact path=\"/otrequest/create\" component={CreateRequest} />\r\n        {/* OT */}\r\n        <Route exact path=\"/ot/create/:idrequest\" component={CreateOT} />\r\n        <Route exact path=\"/ot/view/:id\" component={ViewOT} />\r\n\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stylesheets/custom_bootstrap.css';\r\nimport './stylesheets/index.css';\r\nimport App from './App';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CookiesProvider>\r\n      <App />\r\n    </CookiesProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}